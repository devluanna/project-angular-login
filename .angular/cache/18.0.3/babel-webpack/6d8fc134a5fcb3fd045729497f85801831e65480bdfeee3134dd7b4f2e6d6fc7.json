{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { InputComponent } from '../input/input.component';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RecoveryPasswordService } from 'src/app/services/recovery-password';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/recovery-password\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction ModalRecoveryPasswordComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3)(3, \"div\", 4);\n    i0.ɵɵtext(4, \"Forgot your password?\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 5);\n    i0.ɵɵlistener(\"click\", function ModalRecoveryPasswordComponent_div_0_Template_span_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClose());\n    });\n    i0.ɵɵtext(6, \"\\u00D7\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"div\", 8);\n    i0.ɵɵelement(10, \"img\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 10);\n    i0.ɵɵtext(12, \" Enter your email registered in the system to recover your password. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 11)(14, \"form\", 12)(15, \"app-input\", 13);\n    i0.ɵɵelement(16, \"img\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(17, \"div\", 15)(18, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ModalRecoveryPasswordComponent_div_0_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onClose());\n    });\n    i0.ɵɵtext(19, \" cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function ModalRecoveryPasswordComponent_div_0_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.submit());\n    });\n    i0.ɵɵtext(21, \" send \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.recoveryPasswordForm);\n  }\n}\nexport class ModalRecoveryPasswordComponent {\n  constructor(router, recoveryPasswordService, toastService) {\n    this.router = router;\n    this.recoveryPasswordService = recoveryPasswordService;\n    this.toastService = toastService;\n    this.disablePrimaryBtn = true;\n    this.registeredEmail = '';\n    this.isOpen = false;\n    this.closeModal = new EventEmitter();\n    this.onSubmit = new EventEmitter();\n    this.recoveryPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n  }\n  submit() {\n    this.recoveryPasswordService.recoveryPassword(this.recoveryPasswordForm.value.email).subscribe({\n      next: () => {\n        this.toastService.success(\"Email successfully sent!!\");\n        //this.router.navigate(['user']);\n      },\n      error: () => this.toastService.error(\"Unexpected error! Try again later\")\n    });\n  }\n  onClose() {\n    this.closeModal.emit();\n  }\n  static #_ = this.ɵfac = function ModalRecoveryPasswordComponent_Factory(t) {\n    return new (t || ModalRecoveryPasswordComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RecoveryPasswordService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalRecoveryPasswordComponent,\n    selectors: [[\"app-modal-recovery-password\"]],\n    inputs: {\n      disablePrimaryBtn: \"disablePrimaryBtn\",\n      registeredEmail: \"registeredEmail\",\n      isOpen: \"isOpen\"\n    },\n    outputs: {\n      closeModal: \"closeModal\",\n      onSubmit: \"submit\"\n    },\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([RecoveryPasswordService]), i0.ɵɵStandaloneFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"custom-modal\", 4, \"ngIf\"], [1, \"custom-modal\"], [1, \"modal-content\"], [1, \"header-modal\"], [1, \"title-modal\"], [1, \"close\", 3, \"click\"], [1, \"section-content\"], [1, \"message-success\"], [1, \"icon-success\"], [\"src\", \"/assets/svg/utils/information.svg\"], [1, \"primary-message\"], [1, \"secondary-message\"], [3, \"formGroup\"], [\"formControlName\", \"email\", \"inputName\", \"email\", \"type\", \"email\", \"label\", \"\", \"placeholder\", \"email@email.com\"], [\"src\", \"/assets/svg/signup-input/mail.svg\"], [1, \"div-btn\"], [1, \"btn-primary\", 3, \"click\"], [1, \"btn-secondary\", 3, \"click\"]],\n    template: function ModalRecoveryPasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ModalRecoveryPasswordComponent_div_0_Template, 22, 1, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n      }\n    },\n    dependencies: [CommonModule, i4.NgIf, ReactiveFormsModule, i5.ɵNgNoValidate, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, InputComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","EventEmitter","InputComponent","FormControl","FormGroup","ReactiveFormsModule","Validators","RecoveryPasswordService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ModalRecoveryPasswordComponent_div_0_Template_span_click_5_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","onClose","ɵɵelement","ModalRecoveryPasswordComponent_div_0_Template_button_click_18_listener","ModalRecoveryPasswordComponent_div_0_Template_button_click_20_listener","submit","ɵɵadvance","ɵɵproperty","recoveryPasswordForm","ModalRecoveryPasswordComponent","constructor","router","recoveryPasswordService","toastService","disablePrimaryBtn","registeredEmail","isOpen","closeModal","onSubmit","email","required","recoveryPassword","value","subscribe","next","success","error","emit","_","ɵɵdirectiveInject","i1","Router","i2","i3","ToastrService","_2","selectors","inputs","outputs","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","ModalRecoveryPasswordComponent_Template","rf","ctx","ɵɵtemplate","ModalRecoveryPasswordComponent_div_0_Template","i4","NgIf","i5","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\modal-recovery-password\\modal-recovery-password.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\modal-recovery-password\\modal-recovery-password.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, Input, EventEmitter, Output  } from '@angular/core';\r\nimport { InputComponent } from '../input/input.component';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RecoveryPasswordService } from 'src/app/services/recovery-password';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { ModalDefaultComponent } from '../modal-default/modal-default.component';\r\n\r\ninterface RecoveryPasswordForm {\r\n  email: FormControl,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-modal-recovery-password',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, InputComponent, ModalDefaultComponent],\r\n  providers:[\r\n    RecoveryPasswordService\r\n  ],\r\n  templateUrl: './modal-recovery-password.component.html',\r\n  styleUrl: './modal-recovery-password.component.scss'\r\n})\r\nexport class ModalRecoveryPasswordComponent {\r\n  recoveryPasswordForm!: FormGroup<RecoveryPasswordForm>;\r\n\r\n  @Input() disablePrimaryBtn: boolean = true;\r\n\r\n  @Input() registeredEmail: string = '';\r\n  @Input() isOpen: boolean = false;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output(\"submit\") onSubmit = new EventEmitter();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private recoveryPasswordService: RecoveryPasswordService,\r\n    private toastService: ToastrService\r\n  ) {\r\n    this.recoveryPasswordForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n    });\r\n  }\r\n\r\n  submit(){\r\n    this.recoveryPasswordService\r\n      .recoveryPassword(this.recoveryPasswordForm.value.email).subscribe({\r\n      next: () => {\r\n        this.toastService.success(\"Email successfully sent!!\");\r\n        //this.router.navigate(['user']);\r\n      },\r\n      error: () => this.toastService.error(\"Unexpected error! Try again later\")\r\n    })\r\n  }\r\n\r\n\r\n  onClose() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"isOpen\" class=\"custom-modal\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"header-modal\">\r\n        <div class=\"title-modal\">Forgot your password?</div>\r\n        <span class=\"close\" (click)=\"onClose()\">&times;</span>\r\n      </div>\r\n      <div class=\"section-content\">\r\n      <div class=\"message-success\">\r\n        <div class=\"icon-success\">\r\n          <img src=\"/assets/svg/utils/information.svg\"/>\r\n        </div>\r\n        <div class=\"primary-message\">\r\n          Enter your email registered in the system to recover your password.\r\n        </div>\r\n      </div>\r\n      <div class=\"secondary-message\">\r\n        <form [formGroup]=\"recoveryPasswordForm\">\r\n          <app-input\r\n              formControlName=\"email\"\r\n              inputName=\"email\"\r\n              type=\"email\"\r\n              label=\"\"\r\n              placeholder=\"email@email.com\"\r\n          >\r\n              <img src=\"/assets/svg/signup-input/mail.svg\"/>\r\n          </app-input>\r\n          </form>\r\n      </div>\r\n  \r\n      <div class=\"div-btn\">\r\n      <button\r\n        class=\"btn-primary\"\r\n        (click)=\"onClose()\"\r\n        \r\n      >\r\n        cancel\r\n      </button>\r\n\r\n      <button\r\n        class=\"btn-secondary\"\r\n        (click)=\"submit()\"\r\n      >\r\n        send\r\n      </button>\r\n    </div></div>  </div>\r\n  </div>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}