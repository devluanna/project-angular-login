{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nlet HeaderProfileComponent = class HeaderProfileComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.userInitials = '';\n    this.userFullName = '';\n    this.userEmail = '';\n    this.userRole = '';\n    this.userStatus = '';\n    this.userIdentity = '';\n    this.disablePrimaryBtn = true;\n    this.onSubmit = new EventEmitter();\n    this.onNavigate = new EventEmitter();\n  }\n  ngOnInit() {\n    const userId = sessionStorage.getItem('userId');\n    if (userId) {\n      this.userService.getUserInfo(userId).subscribe(user => {\n        this.userInitials = `${user.first_name.charAt(0)} ${user.last_name.charAt(0)}`;\n        this.userFullName = `${user.first_name} ${user.last_name}`;\n        this.userEmail = `${user.email}`;\n        this.userRole = `${user.role}`;\n        this.userStatus = `${user.status}`;\n        this.userIdentity = `${user.identity}`;\n      }, error => {\n        console.error('Erro ao obter informações do usuário', error);\n      });\n    } else {\n      console.error('ID do usuário não encontrado na sessão');\n    }\n  }\n  submit() {\n    this.onSubmit.emit();\n  }\n  navigate() {\n    this.onNavigate.emit();\n  }\n};\n__decorate([Input()], HeaderProfileComponent.prototype, \"disablePrimaryBtn\", void 0);\n__decorate([Output(\"submit\")], HeaderProfileComponent.prototype, \"onSubmit\", void 0);\n__decorate([Output(\"navigate\")], HeaderProfileComponent.prototype, \"onNavigate\", void 0);\nHeaderProfileComponent = __decorate([Component({\n  selector: 'app-header-profile',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './header-profile.component.html',\n  styleUrl: './header-profile.component.scss'\n})], HeaderProfileComponent);\nexport { HeaderProfileComponent };","map":{"version":3,"names":["CommonModule","Component","EventEmitter","Input","Output","HeaderProfileComponent","constructor","userService","userInitials","userFullName","userEmail","userRole","userStatus","userIdentity","disablePrimaryBtn","onSubmit","onNavigate","ngOnInit","userId","sessionStorage","getItem","getUserInfo","subscribe","user","first_name","charAt","last_name","email","role","status","identity","error","console","submit","emit","navigate","__decorate","selector","standalone","imports","templateUrl","styleUrl"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\header-profile\\header-profile.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport { UserService } from 'src/app/services/user-service';\r\n\r\n@Component({\r\n  selector: 'app-header-profile',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './header-profile.component.html',\r\n  styleUrl: './header-profile.component.scss'\r\n})\r\nexport class HeaderProfileComponent {\r\n  userInitials: string = ''; \r\n  userFullName: string = '';\r\n  userEmail: string = '';\r\n  userRole: string = '';\r\n  userStatus: string = '';\r\n  userIdentity: string = '';\r\n  @Input() disablePrimaryBtn: boolean = true;\r\n  @Output(\"submit\") onSubmit = new EventEmitter();\r\n  @Output(\"navigate\") onNavigate = new EventEmitter();\r\n\r\n  constructor(\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const userId = sessionStorage.getItem('userId');\r\n  \r\n    if (userId) {\r\n      this.userService.getUserInfo(userId).subscribe(\r\n        (user) => {\r\n          this.userInitials = `${user.first_name.charAt(0)} ${user.last_name.charAt(0)}`;\r\n          this.userFullName = `${user.first_name} ${user.last_name}`;\r\n          this.userEmail =  `${user.email}`;\r\n          this.userRole =  `${user.role}`;\r\n          this.userStatus =  `${user.status}`;\r\n          this.userIdentity = `${user.identity}`;\r\n        },\r\n        (error) => {\r\n          console.error('Erro ao obter informações do usuário', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('ID do usuário não encontrado na sessão');\r\n    }\r\n  }\r\n\r\n  submit(){\r\n    this.onSubmit.emit();\r\n  }\r\n\r\n  navigate(){\r\n    this.onNavigate.emit();\r\n  }\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,YAAY,EAAEC,KAAK,EAAEC,MAAM,QAAO,eAAe;AAU9D,IAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAWjCC,YACUC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAXrB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,YAAY,GAAW,EAAE;IAChB,KAAAC,iBAAiB,GAAY,IAAI;IACxB,KAAAC,QAAQ,GAAG,IAAIb,YAAY,EAAE;IAC3B,KAAAc,UAAU,GAAG,IAAId,YAAY,EAAE;EAI/C;EAEJe,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAGC,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC;IAE/C,IAAIF,MAAM,EAAE;MACV,IAAI,CAACX,WAAW,CAACc,WAAW,CAACH,MAAM,CAAC,CAACI,SAAS,CAC3CC,IAAI,IAAI;QACP,IAAI,CAACf,YAAY,GAAG,GAAGe,IAAI,CAACC,UAAU,CAACC,MAAM,CAAC,CAAC,CAAC,IAAIF,IAAI,CAACG,SAAS,CAACD,MAAM,CAAC,CAAC,CAAC,EAAE;QAC9E,IAAI,CAAChB,YAAY,GAAG,GAAGc,IAAI,CAACC,UAAU,IAAID,IAAI,CAACG,SAAS,EAAE;QAC1D,IAAI,CAAChB,SAAS,GAAI,GAAGa,IAAI,CAACI,KAAK,EAAE;QACjC,IAAI,CAAChB,QAAQ,GAAI,GAAGY,IAAI,CAACK,IAAI,EAAE;QAC/B,IAAI,CAAChB,UAAU,GAAI,GAAGW,IAAI,CAACM,MAAM,EAAE;QACnC,IAAI,CAAChB,YAAY,GAAG,GAAGU,IAAI,CAACO,QAAQ,EAAE;MACxC,CAAC,EACAC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CACF;IACH,CAAC,MAAM;MACLC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;IACzD;EACF;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAAClB,QAAQ,CAACmB,IAAI,EAAE;EACtB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACnB,UAAU,CAACkB,IAAI,EAAE;EACxB;CAGD;AAvCUE,UAAA,EAARjC,KAAK,EAAE,C,gEAAmC;AACzBiC,UAAA,EAAjBhC,MAAM,CAAC,QAAQ,CAAC,C,uDAA+B;AAC5BgC,UAAA,EAAnBhC,MAAM,CAAC,UAAU,CAAC,C,yDAAiC;AATzCC,sBAAsB,GAAA+B,UAAA,EAPlCnC,SAAS,CAAC;EACToC,QAAQ,EAAE,oBAAoB;EAC9BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACvC,YAAY,CAAC;EACvBwC,WAAW,EAAE,iCAAiC;EAC9CC,QAAQ,EAAE;CACX,CAAC,C,EACWpC,sBAAsB,CA8ClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}