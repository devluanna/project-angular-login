{"ast":null,"code":"export function identityValidator() {\n  return control => {\n    const value = control.value;\n    if (!value) {\n      return {\n        identityInvalid: true\n      };\n    }\n    const usernamePattern = /^[a-zA-Z0-9]+$/;\n    const isUsername = usernamePattern.test(value);\n    return isUsername ? null : {\n      identityInvalid: true\n    };\n  };\n}","map":{"version":3,"names":["identityValidator","control","value","identityInvalid","usernamePattern","isUsername","test"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\login\\validador-indentity.ts"],"sourcesContent":["import { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\r\n\r\nexport function identityValidator(): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const value = control.value;\r\n    if (!value) {\r\n      return { identityInvalid: true }; \r\n    }\r\n    const usernamePattern = /^[a-zA-Z0-9]+$/;\r\n\r\n    const isUsername = usernamePattern.test(value);\r\n\r\n    return isUsername ? null : { identityInvalid: true };\r\n  };\r\n}"],"mappings":"AAEA,OAAM,SAAUA,iBAAiBA,CAAA;EAC/B,OAAQC,OAAwB,IAA6B;IAC3D,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B,IAAI,CAACA,KAAK,EAAE;MACV,OAAO;QAAEC,eAAe,EAAE;MAAI,CAAE;IAClC;IACA,MAAMC,eAAe,GAAG,gBAAgB;IAExC,MAAMC,UAAU,GAAGD,eAAe,CAACE,IAAI,CAACJ,KAAK,CAAC;IAE9C,OAAOG,UAAU,GAAG,IAAI,GAAG;MAAEF,eAAe,EAAE;IAAI,CAAE;EACtD,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}