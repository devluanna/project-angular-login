{"ast":null,"code":"import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputComponent } from 'src/app/components/input/input.component';\nimport { LoginService } from 'src/app/services/login-service';\nimport { identityValidator } from '../../validators/validador-indentity';\nimport { LoginLayoutComponent } from 'src/app/components/login-layout-component/login-layout.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/login-service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router, loginService, toastService) {\n    this.router = router;\n    this.loginService = loginService;\n    this.toastService = toastService;\n    this.loginForm = new FormGroup({\n      identity: new FormControl('', [Validators.required, identityValidator()]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  submit() {\n    this.loginService.login(this.loginForm.value.identity, this.loginForm.value.password).subscribe({\n      next: () => {\n        this.toastService.success(\"Login successfully!\");\n        this.router.navigate(['user']);\n      },\n      error: () => this.toastService.error(\"Unexpected error! Try again later\")\n    });\n  }\n  navigate() {\n    this.router.navigate([\"signup\"]);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.LoginService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([LoginService]), i0.ɵɵStandaloneFeature],\n    decls: 7,\n    vars: 2,\n    consts: [[\"title\", \"Welcome! Log in to your account.\", \"primaryBtnText\", \"Login Now\", \"secondaryBtnText\", \"Signup Now\", 3, \"submit\", \"navigate\", \"disablePrimaryBtn\"], [3, \"formGroup\"], [\"formControlName\", \"identity\", \"inputName\", \"identity\", \"type\", \"identity\", \"label\", \"Username\", \"placeholder\", \"your identity 234566\"], [\"src\", \"/assets/svg/username.svg\"], [\"formControlName\", \"password\", \"inputName\", \"password\", \"type\", \"password\", \"label\", \"Password\"], [\"src\", \"/assets/svg/password-user.svg\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-login-layout\", 0);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_app_login_layout_submit_0_listener() {\n          return ctx.submit();\n        })(\"navigate\", function LoginComponent_Template_app_login_layout_navigate_0_listener() {\n          return ctx.navigate();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"app-input\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"app-input\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"span\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disablePrimaryBtn\", !ctx.loginForm.valid);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [ReactiveFormsModule, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, InputComponent, LoginLayoutComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","ReactiveFormsModule","Validators","InputComponent","LoginService","identityValidator","LoginLayoutComponent","LoginComponent","constructor","router","loginService","toastService","loginForm","identity","required","password","minLength","submit","login","value","subscribe","next","success","navigate","error","_","i0","ɵɵdirectiveInject","i1","Router","i2","i3","ToastrService","_2","selectors","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_app_login_layout_submit_0_listener","LoginComponent_Template_app_login_layout_navigate_0_listener","ɵɵelement","ɵɵelementEnd","ɵɵproperty","valid","ɵɵadvance","i4","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\login\\login.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { InputComponent } from 'src/app/components/input/input.component';\r\nimport { Router } from '@angular/router';\r\nimport { LoginService } from 'src/app/services/login-service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { identityValidator } from '../../validators/validador-indentity';\r\nimport { LoginLayoutComponent } from 'src/app/components/login-layout-component/login-layout.component';\r\nimport { ModalRecoveryPasswordComponent } from 'src/app/pages/modal-recovery-password/modal-recovery-password.component';\r\n\r\ninterface LoginForm {\r\n  identity: FormControl,\r\n  password: FormControl\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [\r\n    ReactiveFormsModule,\r\n    InputComponent,\r\n    LoginLayoutComponent,\r\n    ModalRecoveryPasswordComponent\r\n  ],\r\n  providers:[\r\n    LoginService\r\n  ],\r\n templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  loginForm!: FormGroup<LoginForm>;\r\n\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService,\r\n    private toastService: ToastrService\r\n  ){\r\n    this.loginForm = new FormGroup({\r\n      identity: new FormControl('', [Validators.required, identityValidator()]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n    })\r\n  }\r\n\r\n\r\n  submit(){\r\n    this.loginService.login(this.loginForm.value.identity, this.loginForm.value.password).subscribe({\r\n      next: () => {\r\n        this.toastService.success(\"Login successfully!\");\r\n        this.router.navigate(['user']);\r\n      },\r\n      error: () => this.toastService.error(\"Unexpected error! Try again later\")\r\n    })\r\n  }\r\n\r\n  navigate(){\r\n    this.router.navigate([\"signup\"])\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n","<app-login-layout\r\n    title=\"Welcome! Log in to your account.\"\r\n    primaryBtnText=\"Login Now\"\r\n    secondaryBtnText=\"Signup Now\"\r\n    (submit)=\"submit()\"\r\n    (navigate)=\"navigate()\"\r\n    [disablePrimaryBtn]=\"!loginForm.valid\"\r\n>\r\n    <form [formGroup]=\"loginForm\">\r\n        <app-input\r\n            formControlName=\"identity\"\r\n            inputName=\"identity\"\r\n            type=\"identity\"\r\n            label=\"Username\"\r\n            placeholder=\"your identity 234566\"\r\n        >\r\n            <img src=\"/assets/svg/username.svg\"/>\r\n        </app-input>\r\n        <app-input\r\n            formControlName=\"password\"\r\n            inputName=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n        >\r\n        <img src=\"/assets/svg/password-user.svg\"/>\r\n    </app-input>\r\n    <span></span>\r\n    </form>\r\n   \r\n</app-login-layout>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}