{"ast":null,"code":"import { HomeDefaultComponent } from 'src/app/components/home-default/home-default.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth-service\";\nimport * as i2 from \"src/app/services/user-service\";\nexport class HomeComponent {\n  constructor(authService, userService) {\n    this.authService = authService;\n    this.userService = userService;\n    this.userFullName = '';\n  }\n  ngOnInit() {\n    const userId = 'id_do_usuario'; // Aqui você precisa obter o ID do usuário logado\n    // Exemplo de como obter o ID do usuário logado, depende da sua implementação\n    const username = this.authService.getUsername();\n    if (username) {\n      // Você deve buscar os detalhes do usuário usando o username obtido do seu serviço de autenticação\n      this.userService.getUserInfo(username).subscribe(user => {\n        // Aqui você ajusta a exibição do nome completo\n        this.userFullName = `${user.first_name} ${user.last_name}`;\n        console.log(user.first_name);\n      }, error => {\n        console.error('Erro ao obter informações do usuário', error);\n      });\n    } else {\n      console.error('Nome de usuário não encontrado'); // Trate o caso em que username é null\n    }\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-user-auth\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 4,\n    vars: 1,\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-home-default\")(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"p\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Usu\\u00E1rio autenticado \", ctx.userFullName, \"\");\n      }\n    },\n    dependencies: [HomeDefaultComponent],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["HomeDefaultComponent","HomeComponent","constructor","authService","userService","userFullName","ngOnInit","userId","username","getUsername","getUserInfo","subscribe","user","first_name","last_name","console","log","error","_","i0","ɵɵdirectiveInject","i1","AuthService","i2","UserService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\home\\home.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\home\\home.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { HomeDefaultComponent } from 'src/app/components/home-default/home-default.component';\r\nimport { AuthService } from 'src/app/services/auth-service';\r\nimport { UserService } from 'src/app/services/user-service';\r\n\r\n@Component({\r\n  selector: 'app-user-auth',\r\n  standalone: true,\r\n  imports: [HomeDefaultComponent],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.scss'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userFullName: string = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private userService: UserService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const userId = 'id_do_usuario'; // Aqui você precisa obter o ID do usuário logado\r\n\r\n    // Exemplo de como obter o ID do usuário logado, depende da sua implementação\r\n    const username = this.authService.getUsername();\r\n\r\n    if (username) {\r\n      // Você deve buscar os detalhes do usuário usando o username obtido do seu serviço de autenticação\r\n      this.userService.getUserInfo(username).subscribe(\r\n        (user) => {\r\n          // Aqui você ajusta a exibição do nome completo\r\n          this.userFullName = `${user.first_name} ${user.last_name}`;\r\n          console.log(user.first_name)\r\n        },\r\n        (error) => {\r\n          console.error('Erro ao obter informações do usuário', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Nome de usuário não encontrado'); // Trate o caso em que username é null\r\n    }\r\n  }\r\n}","<app-home-default>\r\n\r\n<p>Usuário autenticado {{ userFullName }}</p>\r\n<p></p>\r\n\r\n</app-home-default>"],"mappings":"AACA,SAASA,oBAAoB,QAAQ,wDAAwD;;;;AAW7F,OAAM,MAAOC,aAAa;EAGxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,WAAW,GAAXA,WAAW;IAJrB,KAAAC,YAAY,GAAW,EAAE;EAKtB;EAEHC,QAAQA,CAAA;IACN,MAAMC,MAAM,GAAG,eAAe,CAAC,CAAC;IAEhC;IACA,MAAMC,QAAQ,GAAG,IAAI,CAACL,WAAW,CAACM,WAAW,EAAE;IAE/C,IAAID,QAAQ,EAAE;MACZ;MACA,IAAI,CAACJ,WAAW,CAACM,WAAW,CAACF,QAAQ,CAAC,CAACG,SAAS,CAC7CC,IAAI,IAAI;QACP;QACA,IAAI,CAACP,YAAY,GAAG,GAAGO,IAAI,CAACC,UAAU,IAAID,IAAI,CAACE,SAAS,EAAE;QAC1DC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAACC,UAAU,CAAC;MAC9B,CAAC,EACAI,KAAK,IAAI;QACRF,OAAO,CAACE,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC9D,CAAC,CACF;IACH,CAAC,MAAM;MACLF,OAAO,CAACE,KAAK,CAAC,gCAAgC,CAAC,CAAC,CAAC;IACnD;EACF;EAAC,QAAAC,CAAA,G;qBA7BUjB,aAAa,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbxB,aAAa;IAAAyB,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAT,EAAA,CAAAU,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1Bf,EAFA,CAAAiB,cAAA,uBAAkB,QAEf;QAAAjB,EAAA,CAAAkB,MAAA,GAAsC;QAAAlB,EAAA,CAAAmB,YAAA,EAAI;QAC7CnB,EAAA,CAAAoB,SAAA,QAAO;QAEPpB,EAAA,CAAAmB,YAAA,EAAmB;;;QAHhBnB,EAAA,CAAAqB,SAAA,GAAsC;QAAtCrB,EAAA,CAAAsB,kBAAA,8BAAAN,GAAA,CAAA9B,YAAA,KAAsC;;;mBDM7BL,oBAAoB;IAAA0C,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}