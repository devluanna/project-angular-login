{"ast":null,"code":"import { Injectable, InjectionToken, Component, ElementRef, Renderer2, HostListener, EventEmitter, Directive, ViewContainerRef, Optional, Inject, Input, Output, RendererFactory2, NgModule } from '@angular/core';\nimport { isBs3, Utils, document as document$1, window as window$1 } from 'ngx-bootstrap/utils';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\n// tslint:disable-next-line:no-any\nclass BsModalRef {\n  constructor() {\n    /**\n     * Hides the modal\n     */\n    this.hide = Function;\n    /**\n     * Sets new class to modal window\n     */\n    this.setClass = Function;\n  }\n}\nBsModalRef.decorators = [{\n  type: Injectable\n}];\nif (false) {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   * @type {?}\n   */\n  BsModalRef.prototype.id;\n  /**\n   * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n   * @type {?}\n   */\n  BsModalRef.prototype.content;\n  /**\n   * Hides the modal\n   * @type {?}\n   */\n  BsModalRef.prototype.hide;\n  /**\n   * Sets new class to modal window\n   * @type {?}\n   */\n  BsModalRef.prototype.setClass;\n  /**\n   * Event that is fired when the modal behind the ref starts hiding\n   * @type {?}\n   */\n  BsModalRef.prototype.onHide;\n  /**\n   * Event that is fired when the modal behind the ref finishes hiding\n   * @type {?}\n   */\n  BsModalRef.prototype.onHidden;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalBackdropOptions {\n  /**\n   * @param {?} options\n   */\n  constructor(options) {\n    this.animate = true;\n    Object.assign(this, options);\n  }\n}\nif (false) {\n  /** @type {?} */\n  ModalBackdropOptions.prototype.animate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ModalOptions {}\nModalOptions.decorators = [{\n  type: Injectable\n}];\nif (false) {\n  /**\n   *  Allow user to ID for the modal. Otherwise, a unique number will be given\n   * @type {?}\n   */\n  ModalOptions.prototype.id;\n  /**\n   *  Includes a modal-backdrop element. Alternatively,\n   *  specify static for a backdrop which doesn't close the modal on click.\n   * @type {?}\n   */\n  ModalOptions.prototype.backdrop;\n  /**\n   * Closes the modal when escape key is pressed.\n   * @type {?}\n   */\n  ModalOptions.prototype.keyboard;\n  /** @type {?} */\n  ModalOptions.prototype.focus;\n  /**\n   * Shows the modal when initialized.\n   * @type {?}\n   */\n  ModalOptions.prototype.show;\n  /**\n   * Ignore the backdrop click\n   * @type {?}\n   */\n  ModalOptions.prototype.ignoreBackdropClick;\n  /**\n   * Css class for opened modal\n   * @type {?}\n   */\n  ModalOptions.prototype.class;\n  /**\n   * Toggle animation\n   * @type {?}\n   */\n  ModalOptions.prototype.animated;\n  /**\n   * Modal data\n   * @type {?}\n   */\n  ModalOptions.prototype.initialState;\n  /**\n   * Modal providers\n   * @type {?}\n   */\n  ModalOptions.prototype.providers;\n  /**\n   * aria-labelledby attribute value to set on the modal window\n   * @type {?}\n   */\n  ModalOptions.prototype.ariaLabelledBy;\n  /**\n   * aria-describedby attribute value to set on the modal window\n   * @type {?}\n   */\n  ModalOptions.prototype.ariaDescribedby;\n}\n/** @type {?} */\nconst modalConfigDefaults = {\n  backdrop: true,\n  keyboard: true,\n  focus: true,\n  show: false,\n  ignoreBackdropClick: false,\n  class: '',\n  animated: true,\n  initialState: {}\n};\n/** @type {?} */\nconst MODAL_CONFIG_DEFAULT_OVERRIDE = new InjectionToken('override-default-config');\n/** @type {?} */\nconst CLASS_NAME = {\n  SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n  BACKDROP: 'modal-backdrop',\n  OPEN: 'modal-open',\n  FADE: 'fade',\n  IN: 'in',\n  // bs3\n  SHOW: 'show' // bs4\n};\n/** @type {?} */\nconst SELECTOR = {\n  DIALOG: '.modal-dialog',\n  DATA_TOGGLE: '[data-toggle=\"modal\"]',\n  DATA_DISMISS: '[data-dismiss=\"modal\"]',\n  FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n/** @type {?} */\nconst TRANSITION_DURATIONS = {\n  MODAL: 300,\n  BACKDROP: 150\n};\n/** @type {?} */\nconst DISMISS_REASONS = {\n  BACKRDOP: 'backdrop-click',\n  ESC: 'esc',\n  BACK: 'browser-back-navigation-clicked'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalContainerComponent {\n  /**\n   * @param {?} options\n   * @param {?} _element\n   * @param {?} _renderer\n   */\n  constructor(options, _element, _renderer) {\n    this._element = _element;\n    this._renderer = _renderer;\n    this.isShown = false;\n    this.isModalHiding = false;\n    this.clickStartedInContent = false;\n    this.config = Object.assign({}, options);\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    if (this.isAnimated) {\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n    }\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n    setTimeout(\n    /**\n    * @return {?}\n    */\n    () => {\n      this.isShown = true;\n      this._renderer.addClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n    }, this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    if (document && document.body) {\n      if (this.bsModalService.getModalsCount() === 1) {\n        this.bsModalService.checkScrollbar();\n        this.bsModalService.setScrollbar();\n      }\n      this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n    }\n    if (this._element.nativeElement) {\n      this._element.nativeElement.focus();\n    }\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onClickStarted(event) {\n    this.clickStartedInContent = event.target !== this._element.nativeElement;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onClickStop(event) {\n    /** @type {?} */\n    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {\n      this.clickStartedInContent = false;\n      return;\n    }\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n    this.hide();\n  }\n  /**\n   * @return {?}\n   */\n  onPopState() {\n    this.bsModalService.setDismissReason(DISMISS_REASONS.BACK);\n    this.hide();\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onEsc(event) {\n    if (!this.isShown) {\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n    if (this.config.keyboard && this.level === this.bsModalService.getModalsCount()) {\n      this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n      this.hide();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    if (this.isShown) {\n      this.hide();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  hide() {\n    if (this.isModalHiding || !this.isShown) {\n      return;\n    }\n    this.isModalHiding = true;\n    this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n    setTimeout(\n    /**\n    * @return {?}\n    */\n    () => {\n      this.isShown = false;\n      if (document && document.body && this.bsModalService.getModalsCount() === 1) {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n      }\n      this.bsModalService.hide(this.config.id);\n      this.isModalHiding = false;\n    }, this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n  }\n}\nModalContainerComponent.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'modal-container',\n    template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n    host: {\n      class: 'modal',\n      role: 'dialog',\n      tabindex: '-1',\n      '[attr.aria-modal]': 'true',\n      '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n      '[attr.aria-describedby]': 'config.ariaDescribedby'\n    }\n  }]\n}];\n/** @nocollapse */\nModalContainerComponent.ctorParameters = () => [{\n  type: ModalOptions\n}, {\n  type: ElementRef\n}, {\n  type: Renderer2\n}];\nModalContainerComponent.propDecorators = {\n  onClickStarted: [{\n    type: HostListener,\n    args: ['mousedown', ['$event']]\n  }],\n  onClickStop: [{\n    type: HostListener,\n    args: ['mouseup', ['$event']]\n  }],\n  onPopState: [{\n    type: HostListener,\n    args: ['window:popstate']\n  }],\n  onEsc: [{\n    type: HostListener,\n    args: ['window:keydown.esc', ['$event']]\n  }]\n};\nif (false) {\n  /** @type {?} */\n  ModalContainerComponent.prototype.config;\n  /** @type {?} */\n  ModalContainerComponent.prototype.isShown;\n  /** @type {?} */\n  ModalContainerComponent.prototype.level;\n  /** @type {?} */\n  ModalContainerComponent.prototype.isAnimated;\n  /** @type {?} */\n  ModalContainerComponent.prototype.bsModalService;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalContainerComponent.prototype.isModalHiding;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalContainerComponent.prototype.clickStartedInContent;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalContainerComponent.prototype._element;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalContainerComponent.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This component will be added as background layout for modals if enabled\n */\nclass ModalBackdropComponent {\n  /**\n   * @param {?} element\n   * @param {?} renderer\n   */\n  constructor(element, renderer) {\n    this._isShown = false;\n    this.element = element;\n    this.renderer = renderer;\n  }\n  /**\n   * @return {?}\n   */\n  get isAnimated() {\n    return this._isAnimated;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set isAnimated(value) {\n    this._isAnimated = value;\n    // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n  }\n  /**\n   * @return {?}\n   */\n  get isShown() {\n    return this._isShown;\n  }\n  /**\n   * @param {?} value\n   * @return {?}\n   */\n  set isShown(value) {\n    this._isShown = value;\n    if (value) {\n      this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n    } else {\n      this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n    }\n    if (!isBs3()) {\n      if (value) {\n        this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n      } else {\n        this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    if (this.isAnimated) {\n      this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.FADE}`);\n      Utils.reflow(this.element.nativeElement);\n    }\n    this.isShown = true;\n  }\n}\nModalBackdropComponent.decorators = [{\n  type: Component,\n  args: [{\n    selector: 'bs-modal-backdrop',\n    template: ' ',\n    host: {\n      class: CLASS_NAME.BACKDROP\n    }\n  }]\n}];\n/** @nocollapse */\nModalBackdropComponent.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: Renderer2\n}];\nif (false) {\n  /** @type {?} */\n  ModalBackdropComponent.prototype.element;\n  /** @type {?} */\n  ModalBackdropComponent.prototype.renderer;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalBackdropComponent.prototype._isAnimated;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalBackdropComponent.prototype._isShown;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TRANSITION_DURATION = 300;\n/** @type {?} */\nconst BACKDROP_TRANSITION_DURATION = 150;\n/**\n * Mark any code with directive to show it's content in modal\n */\nclass ModalDirective {\n  /**\n   * @param {?} _element\n   * @param {?} _viewContainerRef\n   * @param {?} _renderer\n   * @param {?} clf\n   * @param {?} modalDefaultOption\n   */\n  constructor(_element, _viewContainerRef, _renderer, clf, modalDefaultOption) {\n    this._element = _element;\n    this._renderer = _renderer;\n    /**\n     * This event fires immediately when the `show` instance method is called.\n     */\n    this.onShow = new EventEmitter();\n    /**\n     * This event is fired when the modal has been made visible to the user\n     * (will wait for CSS transitions to complete)\n     */\n    this.onShown = new EventEmitter();\n    /**\n     * This event is fired immediately when\n     * the hide instance method has been called.\n     */\n    this.onHide = new EventEmitter();\n    /**\n     * This event is fired when the modal has finished being\n     * hidden from the user (will wait for CSS transitions to complete).\n     */\n    this.onHidden = new EventEmitter();\n    this._isShown = false;\n    this.isBodyOverflowing = false;\n    this.originalBodyPadding = 0;\n    this.scrollbarWidth = 0;\n    this.timerHideModal = 0;\n    this.timerRmBackDrop = 0;\n    this.isNested = false;\n    this.clickStartedInContent = false;\n    this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n    this._config = modalDefaultOption || modalConfigDefaults;\n  }\n  /**\n   * allows to set modal configuration via element property\n   * @param {?} conf\n   * @return {?}\n   */\n  set config(conf) {\n    this._config = this.getConfig(conf);\n  }\n  /**\n   * @return {?}\n   */\n  get config() {\n    return this._config;\n  }\n  /**\n   * @return {?}\n   */\n  get isShown() {\n    return this._isShown;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onClickStarted(event) {\n    this.clickStartedInContent = event.target !== this._element.nativeElement;\n  }\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onClickStop(event) {\n    /** @type {?} */\n    const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n    if (this.config.ignoreBackdropClick || this.config.backdrop === 'static' || !clickedInBackdrop) {\n      this.clickStartedInContent = false;\n      return;\n    }\n    this.dismissReason = DISMISS_REASONS.BACKRDOP;\n    this.hide(event);\n  }\n  // todo: consider preventing default and stopping propagation\n  /**\n   * @param {?} event\n   * @return {?}\n   */\n  onEsc(event) {\n    if (!this._isShown) {\n      return;\n    }\n    // tslint:disable-next-line:deprecation\n    if (event.keyCode === 27 || event.key === 'Escape') {\n      event.preventDefault();\n    }\n    if (this.config.keyboard) {\n      this.dismissReason = DISMISS_REASONS.ESC;\n      this.hide();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnDestroy() {\n    this.config = void 0;\n    if (this._isShown) {\n      this._isShown = false;\n      this.hideModal();\n      this._backdrop.dispose();\n    }\n  }\n  /**\n   * @return {?}\n   */\n  ngOnInit() {\n    this._config = this._config || this.getConfig();\n    setTimeout(\n    /**\n    * @return {?}\n    */\n    () => {\n      if (this._config.show) {\n        this.show();\n      }\n    }, 0);\n  }\n  /* Public methods */\n  /**\n   * Allows to manually toggle modal visibility\n   * @return {?}\n   */\n  toggle() {\n    return this._isShown ? this.hide() : this.show();\n  }\n  /**\n   * Allows to manually open modal\n   * @return {?}\n   */\n  show() {\n    this.dismissReason = null;\n    this.onShow.emit(this);\n    if (this._isShown) {\n      return;\n    }\n    clearTimeout(this.timerHideModal);\n    clearTimeout(this.timerRmBackDrop);\n    this._isShown = true;\n    this.checkScrollbar();\n    this.setScrollbar();\n    if (document$1 && document$1.body) {\n      if (document$1.body.classList.contains(CLASS_NAME.OPEN)) {\n        this.isNested = true;\n      } else {\n        this._renderer.addClass(document$1.body, CLASS_NAME.OPEN);\n      }\n    }\n    this.showBackdrop(\n    /**\n    * @return {?}\n    */\n    () => {\n      this.showElement();\n    });\n  }\n  /**\n   * Allows to manually close modal\n   * @param {?=} event\n   * @return {?}\n   */\n  hide(event) {\n    if (event) {\n      event.preventDefault();\n    }\n    this.onHide.emit(this);\n    // todo: add an option to prevent hiding\n    if (!this._isShown) {\n      return;\n    }\n    window$1.clearTimeout(this.timerHideModal);\n    window$1.clearTimeout(this.timerRmBackDrop);\n    this._isShown = false;\n    this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n    // this._addClassIn = false;\n    if (this._config.animated) {\n      this.timerHideModal = window$1.setTimeout(\n      /**\n      * @return {?}\n      */\n      () => this.hideModal(), TRANSITION_DURATION);\n    } else {\n      this.hideModal();\n    }\n  }\n  /**\n   * Private methods \\@internal\n   * @protected\n   * @param {?=} config\n   * @return {?}\n   */\n  getConfig(config) {\n    return Object.assign({}, this._config, config);\n  }\n  /**\n   *  Show dialog\n   * \\@internal\n   * @protected\n   * @return {?}\n   */\n  showElement() {\n    // todo: replace this with component loader usage\n    if (!this._element.nativeElement.parentNode || this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // don't move modals dom position\n      if (document$1 && document$1.body) {\n        document$1.body.appendChild(this._element.nativeElement);\n      }\n    }\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n    this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n    if (this._config.animated) {\n      Utils.reflow(this._element.nativeElement);\n    }\n    // this._addClassIn = true;\n    this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n    if (!isBs3()) {\n      this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n    }\n    /** @type {?} */\n    const transitionComplete =\n    /**\n    * @return {?}\n    */\n    () => {\n      if (this._config.focus) {\n        this._element.nativeElement.focus();\n      }\n      this.onShown.emit(this);\n    };\n    if (this._config.animated) {\n      setTimeout(transitionComplete, TRANSITION_DURATION);\n    } else {\n      transitionComplete();\n    }\n  }\n  /**\n   * \\@internal\n   * @protected\n   * @return {?}\n   */\n  hideModal() {\n    this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n    this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n    this.showBackdrop(\n    /**\n    * @return {?}\n    */\n    () => {\n      if (!this.isNested) {\n        if (document$1 && document$1.body) {\n          this._renderer.removeClass(document$1.body, CLASS_NAME.OPEN);\n        }\n        this.resetScrollbar();\n      }\n      this.resetAdjustments();\n      this.focusOtherModal();\n      this.onHidden.emit(this);\n    });\n  }\n  // todo: original show was calling a callback when done, but we can use\n  // promise\n  /**\n   * \\@internal\n   * @protected\n   * @param {?=} callback\n   * @return {?}\n   */\n  showBackdrop(callback) {\n    if (this._isShown && this.config.backdrop && (!this.backdrop || !this.backdrop.instance.isShown)) {\n      this.removeBackdrop();\n      this._backdrop.attach(ModalBackdropComponent).to('body').show({\n        isAnimated: this._config.animated\n      });\n      this.backdrop = this._backdrop._componentRef;\n      if (!callback) {\n        return;\n      }\n      if (!this._config.animated) {\n        callback();\n        return;\n      }\n      setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n    } else if (!this._isShown && this.backdrop) {\n      this.backdrop.instance.isShown = false;\n      /** @type {?} */\n      const callbackRemove =\n      /**\n      * @return {?}\n      */\n      () => {\n        this.removeBackdrop();\n        if (callback) {\n          callback();\n        }\n      };\n      if (this.backdrop.instance.isAnimated) {\n        this.timerRmBackDrop = window$1.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n      } else {\n        callbackRemove();\n      }\n    } else if (callback) {\n      callback();\n    }\n  }\n  /**\n   * \\@internal\n   * @protected\n   * @return {?}\n   */\n  removeBackdrop() {\n    this._backdrop.hide();\n  }\n  /**\n   * Events tricks\n   * @protected\n   * @return {?}\n   */\n  // no need for it\n  // protected setEscapeEvent():void {\n  //   if (this._isShown && this._config.keyboard) {\n  //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n  //       if (event.which === 27) {\n  //         this.hide()\n  //       }\n  //     })\n  //\n  //   } else if (!this._isShown) {\n  //     $(this._element).off(Event.KEYDOWN_DISMISS)\n  //   }\n  // }\n  // protected setResizeEvent():void {\n  // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n  // if (this._isShown) {\n  //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n  // } else {\n  //   $(window).off(Event.RESIZE)\n  // }\n  // }\n  focusOtherModal() {\n    if (this._element.nativeElement.parentElement == null) {\n      return;\n    }\n    /** @type {?} */\n    const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n    if (!otherOpenedModals.length) {\n      return;\n    }\n    otherOpenedModals[otherOpenedModals.length - 1].focus();\n  }\n  /**\n   * \\@internal\n   * @protected\n   * @return {?}\n   */\n  resetAdjustments() {\n    this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n    this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n  }\n  /** Scroll bar tricks */\n  /**\n   * \\@internal\n   * @protected\n   * @return {?}\n   */\n  checkScrollbar() {\n    this.isBodyOverflowing = document$1.body.clientWidth < window$1.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n  setScrollbar() {\n    if (!document$1) {\n      return;\n    }\n    this.originalBodyPadding = parseInt(window$1.getComputedStyle(document$1.body).getPropertyValue('padding-right') || 0, 10);\n    if (this.isBodyOverflowing) {\n      document$1.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;\n    }\n  }\n  /**\n   * @protected\n   * @return {?}\n   */\n  resetScrollbar() {\n    document$1.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n  // thx d.walsh\n  /**\n   * @protected\n   * @return {?}\n   */\n  getScrollbarWidth() {\n    /** @type {?} */\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document$1.body, scrollDiv);\n    /** @type {?} */\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document$1.body, scrollDiv);\n    return scrollbarWidth;\n  }\n}\nModalDirective.decorators = [{\n  type: Directive,\n  args: [{\n    selector: '[bsModal]',\n    exportAs: 'bs-modal'\n  }]\n}];\n/** @nocollapse */\nModalDirective.ctorParameters = () => [{\n  type: ElementRef\n}, {\n  type: ViewContainerRef\n}, {\n  type: Renderer2\n}, {\n  type: ComponentLoaderFactory\n}, {\n  type: ModalOptions,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n  }]\n}];\nModalDirective.propDecorators = {\n  config: [{\n    type: Input\n  }],\n  onShow: [{\n    type: Output\n  }],\n  onShown: [{\n    type: Output\n  }],\n  onHide: [{\n    type: Output\n  }],\n  onHidden: [{\n    type: Output\n  }],\n  onClickStarted: [{\n    type: HostListener,\n    args: ['mousedown', ['$event']]\n  }],\n  onClickStop: [{\n    type: HostListener,\n    args: ['mouseup', ['$event']]\n  }],\n  onEsc: [{\n    type: HostListener,\n    args: ['keydown.esc', ['$event']]\n  }]\n};\nif (false) {\n  /**\n   * This event fires immediately when the `show` instance method is called.\n   * @type {?}\n   */\n  ModalDirective.prototype.onShow;\n  /**\n   * This event is fired when the modal has been made visible to the user\n   * (will wait for CSS transitions to complete)\n   * @type {?}\n   */\n  ModalDirective.prototype.onShown;\n  /**\n   * This event is fired immediately when\n   * the hide instance method has been called.\n   * @type {?}\n   */\n  ModalDirective.prototype.onHide;\n  /**\n   * This event is fired when the modal has finished being\n   * hidden from the user (will wait for CSS transitions to complete).\n   * @type {?}\n   */\n  ModalDirective.prototype.onHidden;\n  /**\n   * This field contains last dismiss reason.\n   * Possible values: `backdrop-click`, `esc` and `id: number`\n   * (if modal was closed by direct call of `.hide()`).\n   * @type {?}\n   */\n  ModalDirective.prototype.dismissReason;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype._config;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype._isShown;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype.isBodyOverflowing;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype.originalBodyPadding;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype.scrollbarWidth;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype.timerHideModal;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype.timerRmBackDrop;\n  /**\n   * @type {?}\n   * @protected\n   */\n  ModalDirective.prototype.backdrop;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalDirective.prototype._backdrop;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalDirective.prototype.isNested;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalDirective.prototype.clickStartedInContent;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalDirective.prototype._element;\n  /**\n   * @type {?}\n   * @private\n   */\n  ModalDirective.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BsModalService {\n  /**\n   * @param {?} rendererFactory\n   * @param {?} clf\n   * @param {?} modalDefaultOption\n   */\n  constructor(rendererFactory, clf, modalDefaultOption) {\n    this.clf = clf;\n    this.modalDefaultOption = modalDefaultOption;\n    // tslint:disable-next-line:no-any\n    this.onShow = new EventEmitter();\n    // tslint:disable-next-line:no-any\n    this.onShown = new EventEmitter();\n    // tslint:disable-next-line:no-any\n    this.onHide = new EventEmitter();\n    // tslint:disable-next-line:no-any\n    this.onHidden = new EventEmitter();\n    this.isBodyOverflowing = false;\n    this.originalBodyPadding = 0;\n    this.scrollbarWidth = 0;\n    this.modalsCount = 0;\n    this.lastDismissReason = null;\n    this.loaders = [];\n    this._backdropLoader = this.clf.createLoader(null, null, null);\n    this._renderer = rendererFactory.createRenderer(null, null);\n    this.config = modalDefaultOption ? Object.assign({}, modalConfigDefaults, modalDefaultOption) : modalConfigDefaults;\n  }\n  /**\n   * Shows a modal\n   * @template T\n   * @param {?} content\n   * @param {?=} config\n   * @return {?}\n   */\n  show(\n  // tslint:disable-next-line:no-any\n  content, config) {\n    this.modalsCount++;\n    this._createLoaders();\n    /** @type {?} */\n    const id = (config === null || config === void 0 ? void 0 : config.id) || new Date().getUTCMilliseconds();\n    this.config = this.modalDefaultOption ? Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) : Object.assign({}, modalConfigDefaults, config);\n    this.config.id = id;\n    this._showBackdrop();\n    this.lastDismissReason = null;\n    return this._showModal(content);\n  }\n  /**\n   * @param {?=} id\n   * @return {?}\n   */\n  hide(id) {\n    if (this.modalsCount === 1 || id == null) {\n      this._hideBackdrop();\n      this.resetScrollbar();\n    }\n    this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\n    setTimeout(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._hideModal(id);\n      this.removeLoaders(id);\n    }, this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n  }\n  /**\n   * @return {?}\n   */\n  _showBackdrop() {\n    /** @type {?} */\n    const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n    /** @type {?} */\n    const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n    if (this.modalsCount === 1) {\n      this.removeBackdrop();\n      if (isBackdropEnabled && isBackdropInDOM) {\n        this._backdropLoader.attach(ModalBackdropComponent).to('body').show({\n          isAnimated: this.config.animated\n        });\n        this.backdropRef = this._backdropLoader._componentRef;\n      }\n    }\n  }\n  /**\n   * @return {?}\n   */\n  _hideBackdrop() {\n    if (!this.backdropRef) {\n      return;\n    }\n    this.backdropRef.instance.isShown = false;\n    /** @type {?} */\n    const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n    setTimeout(\n    /**\n    * @return {?}\n    */\n    () => this.removeBackdrop(), duration);\n  }\n  // tslint:disable-next-line:no-any\n  /**\n   * @param {?} content\n   * @return {?}\n   */\n  _showModal(content) {\n    var _a;\n    /** @type {?} */\n    const modalLoader = this.loaders[this.loaders.length - 1];\n    if (this.config && this.config.providers) {\n      for (const provider of this.config.providers) {\n        modalLoader.provide(provider);\n      }\n    }\n    /** @type {?} */\n    const bsModalRef = new BsModalRef();\n    /** @type {?} */\n    const modalContainerRef = modalLoader.provide({\n      provide: ModalOptions,\n      useValue: this.config\n    }).provide({\n      provide: BsModalRef,\n      useValue: bsModalRef\n    }).attach(ModalContainerComponent).to('body');\n    bsModalRef.hide =\n    /**\n    * @return {?}\n    */\n    () => modalContainerRef.instance.hide();\n    bsModalRef.setClass =\n    /**\n    * @param {?} newClass\n    * @return {?}\n    */\n    newClass => {\n      modalContainerRef.instance.config.class = newClass;\n    };\n    bsModalRef.onHidden = new EventEmitter();\n    bsModalRef.onHide = new EventEmitter();\n    this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\n    this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);\n    // call 'show' method after assign setClass in bsModalRef.\n    // it makes modal component's bsModalRef available to call setClass method\n    modalContainerRef.show({\n      content,\n      isAnimated: this.config.animated,\n      initialState: this.config.initialState,\n      bsModalService: this,\n      id: this.config.id\n    });\n    modalContainerRef.instance.level = this.getModalsCount();\n    bsModalRef.content = modalLoader.getInnerComponent() || null;\n    bsModalRef.id = (_a = modalContainerRef.instance.config) === null || _a === void 0 ? void 0 : _a.id;\n    return bsModalRef;\n  }\n  /**\n   * @param {?=} id\n   * @return {?}\n   */\n  _hideModal(id) {\n    if (id != null) {\n      /** @type {?} */\n      const indexToRemove = this.loaders.findIndex(\n      /**\n      * @param {?} loader\n      * @return {?}\n      */\n      loader => loader.instance.config.id === id);\n      /** @type {?} */\n      const modalLoader = this.loaders[indexToRemove];\n      if (modalLoader) {\n        modalLoader.hide(id);\n      }\n    } else {\n      this.loaders.forEach(\n      /**\n      * @param {?} loader\n      * @return {?}\n      */\n      loader => {\n        loader.hide(loader.instance.config.id);\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  getModalsCount() {\n    return this.modalsCount;\n  }\n  /**\n   * @param {?} reason\n   * @return {?}\n   */\n  setDismissReason(reason) {\n    this.lastDismissReason = reason;\n  }\n  /**\n   * @return {?}\n   */\n  removeBackdrop() {\n    this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n    this._backdropLoader.hide();\n    this.backdropRef = null;\n  }\n  /** Checks if the body is overflowing and sets scrollbar width */\n  /**\n   * \\@internal\n   * @return {?}\n   */\n  checkScrollbar() {\n    this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n    this.scrollbarWidth = this.getScrollbarWidth();\n  }\n  /**\n   * @return {?}\n   */\n  setScrollbar() {\n    if (!document) {\n      return;\n    }\n    this.originalBodyPadding = parseInt(window.getComputedStyle(document.body).getPropertyValue('padding-right') || '0', 10);\n    if (this.isBodyOverflowing) {\n      document.body.style.paddingRight = `${this.originalBodyPadding + this.scrollbarWidth}px`;\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  resetScrollbar() {\n    document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n  }\n  // thx d.walsh\n  /**\n   * @private\n   * @return {?}\n   */\n  getScrollbarWidth() {\n    /** @type {?} */\n    const scrollDiv = this._renderer.createElement('div');\n    this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n    this._renderer.appendChild(document.body, scrollDiv);\n    /** @type {?} */\n    const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n    this._renderer.removeChild(document.body, scrollDiv);\n    return scrollbarWidth;\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _createLoaders() {\n    /** @type {?} */\n    const loader = this.clf.createLoader(null, null, null);\n    this.copyEvent(loader.onBeforeShow, this.onShow);\n    this.copyEvent(loader.onShown, this.onShown);\n    this.copyEvent(loader.onBeforeHide, this.onHide);\n    this.copyEvent(loader.onHidden, this.onHidden);\n    this.loaders.push(loader);\n  }\n  /**\n   * @private\n   * @param {?=} id\n   * @return {?}\n   */\n  removeLoaders(id) {\n    if (id != null) {\n      /** @type {?} */\n      const indexToRemove = this.loaders.findIndex(\n      /**\n      * @param {?} loader\n      * @return {?}\n      */\n      loader => loader.instance.config.id === id);\n      if (indexToRemove >= 0) {\n        this.loaders.splice(indexToRemove, 1);\n        this.loaders.forEach(\n        /**\n        * @param {?} loader\n        * @param {?} i\n        * @return {?}\n        */\n        (loader, i) => {\n          loader.instance.level = i + 1;\n        });\n      }\n    } else {\n      this.loaders.splice(0, this.loaders.length);\n    }\n  }\n  // tslint:disable-next-line:no-any\n  /**\n   * @private\n   * @param {?} from\n   * @param {?} to\n   * @return {?}\n   */\n  copyEvent(from, to) {\n    from.subscribe(\n    /**\n    * @param {?} data\n    * @return {?}\n    */\n    data => {\n      to.emit(this.lastDismissReason || data);\n    });\n  }\n}\nBsModalService.decorators = [{\n  type: Injectable\n}];\n/** @nocollapse */\nBsModalService.ctorParameters = () => [{\n  type: RendererFactory2\n}, {\n  type: ComponentLoaderFactory\n}, {\n  type: ModalOptions,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [MODAL_CONFIG_DEFAULT_OVERRIDE]\n  }]\n}];\nif (false) {\n  /** @type {?} */\n  BsModalService.prototype.config;\n  /** @type {?} */\n  BsModalService.prototype.onShow;\n  /** @type {?} */\n  BsModalService.prototype.onShown;\n  /** @type {?} */\n  BsModalService.prototype.onHide;\n  /** @type {?} */\n  BsModalService.prototype.onHidden;\n  /**\n   * @type {?}\n   * @protected\n   */\n  BsModalService.prototype.isBodyOverflowing;\n  /**\n   * @type {?}\n   * @protected\n   */\n  BsModalService.prototype.originalBodyPadding;\n  /**\n   * @type {?}\n   * @protected\n   */\n  BsModalService.prototype.scrollbarWidth;\n  /**\n   * @type {?}\n   * @protected\n   */\n  BsModalService.prototype.backdropRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype._backdropLoader;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype.modalsCount;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype.lastDismissReason;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype.loaders;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype.clf;\n  /**\n   * @type {?}\n   * @private\n   */\n  BsModalService.prototype.modalDefaultOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalModule {\n  /**\n   * @return {?}\n   */\n  static forRoot() {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n  /**\n   * @return {?}\n   */\n  static forChild() {\n    return {\n      ngModule: ModalModule,\n      providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n    };\n  }\n}\nModalModule.decorators = [{\n  type: NgModule,\n  args: [{\n    declarations: [ModalBackdropComponent, ModalDirective, ModalContainerComponent],\n    exports: [ModalBackdropComponent, ModalDirective],\n    entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n  }]\n}];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BsModalRef, BsModalService, MODAL_CONFIG_DEFAULT_OVERRIDE, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, CLASS_NAME as ɵa };","map":{"version":3,"names":["Injectable","InjectionToken","Component","ElementRef","Renderer2","HostListener","EventEmitter","Directive","ViewContainerRef","Optional","Inject","Input","Output","RendererFactory2","NgModule","isBs3","Utils","document","document$1","window","window$1","ComponentLoaderFactory","PositioningService","BsModalRef","constructor","hide","Function","setClass","decorators","type","prototype","id","content","onHide","onHidden","ModalBackdropOptions","options","animate","Object","assign","ModalOptions","backdrop","keyboard","focus","show","ignoreBackdropClick","class","animated","initialState","providers","ariaLabelledBy","ariaDescribedby","modalConfigDefaults","MODAL_CONFIG_DEFAULT_OVERRIDE","CLASS_NAME","SCROLLBAR_MEASURER","BACKDROP","OPEN","FADE","IN","SHOW","SELECTOR","DIALOG","DATA_TOGGLE","DATA_DISMISS","FIXED_CONTENT","TRANSITION_DURATIONS","MODAL","DISMISS_REASONS","BACKRDOP","ESC","BACK","ModalContainerComponent","_element","_renderer","isShown","isModalHiding","clickStartedInContent","config","ngOnInit","isAnimated","addClass","nativeElement","setStyle","setTimeout","body","bsModalService","getModalsCount","checkScrollbar","setScrollbar","onClickStarted","event","target","onClickStop","clickedInBackdrop","setDismissReason","onPopState","onEsc","keyCode","key","preventDefault","level","ngOnDestroy","removeClass","args","selector","template","host","role","tabindex","ctorParameters","propDecorators","ModalBackdropComponent","element","renderer","_isShown","_isAnimated","value","reflow","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","ModalDirective","_viewContainerRef","clf","modalDefaultOption","onShow","onShown","isBodyOverflowing","originalBodyPadding","scrollbarWidth","timerHideModal","timerRmBackDrop","isNested","_backdrop","createLoader","_config","conf","getConfig","dismissReason","hideModal","dispose","toggle","emit","clearTimeout","classList","contains","showBackdrop","showElement","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","setAttribute","setProperty","transitionComplete","resetScrollbar","resetAdjustments","focusOtherModal","callback","instance","removeBackdrop","attach","to","_componentRef","callbackRemove","parentElement","otherOpenedModals","querySelectorAll","length","clientWidth","innerWidth","getScrollbarWidth","parseInt","getComputedStyle","getPropertyValue","style","paddingRight","scrollDiv","createElement","offsetWidth","removeChild","exportAs","BsModalService","rendererFactory","modalsCount","lastDismissReason","loaders","_backdropLoader","createRenderer","_createLoaders","Date","getUTCMilliseconds","_showBackdrop","_showModal","_hideBackdrop","_hideModal","removeLoaders","isBackdropEnabled","isBackdropInDOM","backdropRef","duration","_a","modalLoader","provider","provide","bsModalRef","modalContainerRef","useValue","newClass","copyEvent","onBeforeHide","getInnerComponent","indexToRemove","findIndex","loader","forEach","reason","onBeforeShow","push","splice","i","from","subscribe","data","ModalModule","forRoot","ngModule","forChild","declarations","exports","entryComponents","ɵa"],"sources":["C:/Users/luana/OneDrive/Área de Trabalho/Lua/project-angular-login/project-angular-login/node_modules/ngx-bootstrap/modal/fesm2015/ngx-bootstrap-modal.js"],"sourcesContent":["import { Injectable, InjectionToken, Component, ElementRef, Renderer2, HostListener, EventEmitter, Directive, ViewContainerRef, Optional, Inject, Input, Output, RendererFactory2, NgModule } from '@angular/core';\nimport { isBs3, Utils, document as document$1, window as window$1 } from 'ngx-bootstrap/utils';\nimport { ComponentLoaderFactory } from 'ngx-bootstrap/component-loader';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\n// tslint:disable-next-line:no-any\nclass BsModalRef {\n    constructor() {\n        /**\n         * Hides the modal\n         */\n        this.hide = Function;\n        /**\n         * Sets new class to modal window\n         */\n        this.setClass = Function;\n    }\n}\nBsModalRef.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /**\n     *  Allow user to ID for the modal. Otherwise, a unique number will be given\n     * @type {?}\n     */\n    BsModalRef.prototype.id;\n    /**\n     * Reference to a component inside the modal. Null if modal's been created with TemplateRef\n     * @type {?}\n     */\n    BsModalRef.prototype.content;\n    /**\n     * Hides the modal\n     * @type {?}\n     */\n    BsModalRef.prototype.hide;\n    /**\n     * Sets new class to modal window\n     * @type {?}\n     */\n    BsModalRef.prototype.setClass;\n    /**\n     * Event that is fired when the modal behind the ref starts hiding\n     * @type {?}\n     */\n    BsModalRef.prototype.onHide;\n    /**\n     * Event that is fired when the modal behind the ref finishes hiding\n     * @type {?}\n     */\n    BsModalRef.prototype.onHidden;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalBackdropOptions {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.animate = true;\n        Object.assign(this, options);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ModalBackdropOptions.prototype.animate;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ModalOptions {\n}\nModalOptions.decorators = [\n    { type: Injectable }\n];\nif (false) {\n    /**\n     *  Allow user to ID for the modal. Otherwise, a unique number will be given\n     * @type {?}\n     */\n    ModalOptions.prototype.id;\n    /**\n     *  Includes a modal-backdrop element. Alternatively,\n     *  specify static for a backdrop which doesn't close the modal on click.\n     * @type {?}\n     */\n    ModalOptions.prototype.backdrop;\n    /**\n     * Closes the modal when escape key is pressed.\n     * @type {?}\n     */\n    ModalOptions.prototype.keyboard;\n    /** @type {?} */\n    ModalOptions.prototype.focus;\n    /**\n     * Shows the modal when initialized.\n     * @type {?}\n     */\n    ModalOptions.prototype.show;\n    /**\n     * Ignore the backdrop click\n     * @type {?}\n     */\n    ModalOptions.prototype.ignoreBackdropClick;\n    /**\n     * Css class for opened modal\n     * @type {?}\n     */\n    ModalOptions.prototype.class;\n    /**\n     * Toggle animation\n     * @type {?}\n     */\n    ModalOptions.prototype.animated;\n    /**\n     * Modal data\n     * @type {?}\n     */\n    ModalOptions.prototype.initialState;\n    /**\n     * Modal providers\n     * @type {?}\n     */\n    ModalOptions.prototype.providers;\n    /**\n     * aria-labelledby attribute value to set on the modal window\n     * @type {?}\n     */\n    ModalOptions.prototype.ariaLabelledBy;\n    /**\n     * aria-describedby attribute value to set on the modal window\n     * @type {?}\n     */\n    ModalOptions.prototype.ariaDescribedby;\n}\n/** @type {?} */\nconst modalConfigDefaults = {\n    backdrop: true,\n    keyboard: true,\n    focus: true,\n    show: false,\n    ignoreBackdropClick: false,\n    class: '',\n    animated: true,\n    initialState: {}\n};\n/** @type {?} */\nconst MODAL_CONFIG_DEFAULT_OVERRIDE = new InjectionToken('override-default-config');\n/** @type {?} */\nconst CLASS_NAME = {\n    SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\n    BACKDROP: 'modal-backdrop',\n    OPEN: 'modal-open',\n    FADE: 'fade',\n    IN: 'in',\n    // bs3\n    SHOW: 'show' // bs4\n};\n/** @type {?} */\nconst SELECTOR = {\n    DIALOG: '.modal-dialog',\n    DATA_TOGGLE: '[data-toggle=\"modal\"]',\n    DATA_DISMISS: '[data-dismiss=\"modal\"]',\n    FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\n};\n/** @type {?} */\nconst TRANSITION_DURATIONS = {\n    MODAL: 300,\n    BACKDROP: 150\n};\n/** @type {?} */\nconst DISMISS_REASONS = {\n    BACKRDOP: 'backdrop-click',\n    ESC: 'esc',\n    BACK: 'browser-back-navigation-clicked'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalContainerComponent {\n    /**\n     * @param {?} options\n     * @param {?} _element\n     * @param {?} _renderer\n     */\n    constructor(options, _element, _renderer) {\n        this._element = _element;\n        this._renderer = _renderer;\n        this.isShown = false;\n        this.isModalHiding = false;\n        this.clickStartedInContent = false;\n        this.config = Object.assign({}, options);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.isAnimated) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.FADE);\n        }\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isShown = true;\n            this._renderer.addClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        }), this.isAnimated ? TRANSITION_DURATIONS.BACKDROP : 0);\n        if (document && document.body) {\n            if (this.bsModalService.getModalsCount() === 1) {\n                this.bsModalService.checkScrollbar();\n                this.bsModalService.setScrollbar();\n            }\n            this._renderer.addClass(document.body, CLASS_NAME.OPEN);\n        }\n        if (this._element.nativeElement) {\n            this._element.nativeElement.focus();\n        }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted(event) {\n        this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop(event) {\n        /** @type {?} */\n        const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            !clickedInBackdrop) {\n            this.clickStartedInContent = false;\n            return;\n        }\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACKRDOP);\n        this.hide();\n    }\n    /**\n     * @return {?}\n     */\n    onPopState() {\n        this.bsModalService.setDismissReason(DISMISS_REASONS.BACK);\n        this.hide();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc(event) {\n        if (!this.isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard &&\n            this.level === this.bsModalService.getModalsCount()) {\n            this.bsModalService.setDismissReason(DISMISS_REASONS.ESC);\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.isShown) {\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    hide() {\n        if (this.isModalHiding || !this.isShown) {\n            return;\n        }\n        this.isModalHiding = true;\n        this._renderer.removeClass(this._element.nativeElement, isBs3() ? CLASS_NAME.IN : CLASS_NAME.SHOW);\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this.isShown = false;\n            if (document &&\n                document.body &&\n                this.bsModalService.getModalsCount() === 1) {\n                this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n            }\n            this.bsModalService.hide(this.config.id);\n            this.isModalHiding = false;\n        }), this.isAnimated ? TRANSITION_DURATIONS.MODAL : 0);\n    }\n}\nModalContainerComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'modal-container',\n                template: `\n    <div [class]=\"'modal-dialog' + (config.class ? ' ' + config.class : '')\" role=\"document\">\n      <div class=\"modal-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n                host: {\n                    class: 'modal',\n                    role: 'dialog',\n                    tabindex: '-1',\n                    '[attr.aria-modal]': 'true',\n                    '[attr.aria-labelledby]': 'config.ariaLabelledBy',\n                    '[attr.aria-describedby]': 'config.ariaDescribedby'\n                }\n            }] }\n];\n/** @nocollapse */\nModalContainerComponent.ctorParameters = () => [\n    { type: ModalOptions },\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nModalContainerComponent.propDecorators = {\n    onClickStarted: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onClickStop: [{ type: HostListener, args: ['mouseup', ['$event'],] }],\n    onPopState: [{ type: HostListener, args: ['window:popstate',] }],\n    onEsc: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }]\n};\nif (false) {\n    /** @type {?} */\n    ModalContainerComponent.prototype.config;\n    /** @type {?} */\n    ModalContainerComponent.prototype.isShown;\n    /** @type {?} */\n    ModalContainerComponent.prototype.level;\n    /** @type {?} */\n    ModalContainerComponent.prototype.isAnimated;\n    /** @type {?} */\n    ModalContainerComponent.prototype.bsModalService;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype.isModalHiding;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype.clickStartedInContent;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalContainerComponent.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalContainerComponent.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This component will be added as background layout for modals if enabled\n */\nclass ModalBackdropComponent {\n    /**\n     * @param {?} element\n     * @param {?} renderer\n     */\n    constructor(element, renderer) {\n        this._isShown = false;\n        this.element = element;\n        this.renderer = renderer;\n    }\n    /**\n     * @return {?}\n     */\n    get isAnimated() {\n        return this._isAnimated;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isAnimated(value) {\n        this._isAnimated = value;\n        // this.renderer.setElementClass(this.element.nativeElement, `${ClassName.FADE}`, value);\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        return this._isShown;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set isShown(value) {\n        this._isShown = value;\n        if (value) {\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n        }\n        else {\n            this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.IN}`);\n        }\n        if (!isBs3()) {\n            if (value) {\n                this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n            }\n            else {\n                this.renderer.removeClass(this.element.nativeElement, `${CLASS_NAME.SHOW}`);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.isAnimated) {\n            this.renderer.addClass(this.element.nativeElement, `${CLASS_NAME.FADE}`);\n            Utils.reflow(this.element.nativeElement);\n        }\n        this.isShown = true;\n    }\n}\nModalBackdropComponent.decorators = [\n    { type: Component, args: [{\n                selector: 'bs-modal-backdrop',\n                template: ' ',\n                host: { class: CLASS_NAME.BACKDROP }\n            }] }\n];\n/** @nocollapse */\nModalBackdropComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 }\n];\nif (false) {\n    /** @type {?} */\n    ModalBackdropComponent.prototype.element;\n    /** @type {?} */\n    ModalBackdropComponent.prototype.renderer;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalBackdropComponent.prototype._isAnimated;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalBackdropComponent.prototype._isShown;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst TRANSITION_DURATION = 300;\n/** @type {?} */\nconst BACKDROP_TRANSITION_DURATION = 150;\n/**\n * Mark any code with directive to show it's content in modal\n */\nclass ModalDirective {\n    /**\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} clf\n     * @param {?} modalDefaultOption\n     */\n    constructor(_element, _viewContainerRef, _renderer, clf, modalDefaultOption) {\n        this._element = _element;\n        this._renderer = _renderer;\n        /**\n         * This event fires immediately when the `show` instance method is called.\n         */\n        this.onShow = new EventEmitter();\n        /**\n         * This event is fired when the modal has been made visible to the user\n         * (will wait for CSS transitions to complete)\n         */\n        this.onShown = new EventEmitter();\n        /**\n         * This event is fired immediately when\n         * the hide instance method has been called.\n         */\n        this.onHide = new EventEmitter();\n        /**\n         * This event is fired when the modal has finished being\n         * hidden from the user (will wait for CSS transitions to complete).\n         */\n        this.onHidden = new EventEmitter();\n        this._isShown = false;\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.timerHideModal = 0;\n        this.timerRmBackDrop = 0;\n        this.isNested = false;\n        this.clickStartedInContent = false;\n        this._backdrop = clf.createLoader(_element, _viewContainerRef, _renderer);\n        this._config = modalDefaultOption || modalConfigDefaults;\n    }\n    /**\n     * allows to set modal configuration via element property\n     * @param {?} conf\n     * @return {?}\n     */\n    set config(conf) {\n        this._config = this.getConfig(conf);\n    }\n    /**\n     * @return {?}\n     */\n    get config() {\n        return this._config;\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        return this._isShown;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStarted(event) {\n        this.clickStartedInContent = event.target !== this._element.nativeElement;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onClickStop(event) {\n        /** @type {?} */\n        const clickedInBackdrop = event.target === this._element.nativeElement && !this.clickStartedInContent;\n        if (this.config.ignoreBackdropClick ||\n            this.config.backdrop === 'static' ||\n            !clickedInBackdrop) {\n            this.clickStartedInContent = false;\n            return;\n        }\n        this.dismissReason = DISMISS_REASONS.BACKRDOP;\n        this.hide(event);\n    }\n    // todo: consider preventing default and stopping propagation\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onEsc(event) {\n        if (!this._isShown) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        if (event.keyCode === 27 || event.key === 'Escape') {\n            event.preventDefault();\n        }\n        if (this.config.keyboard) {\n            this.dismissReason = DISMISS_REASONS.ESC;\n            this.hide();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.config = void 0;\n        if (this._isShown) {\n            this._isShown = false;\n            this.hideModal();\n            this._backdrop.dispose();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._config = this._config || this.getConfig();\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            if (this._config.show) {\n                this.show();\n            }\n        }), 0);\n    }\n    /* Public methods */\n    /**\n     * Allows to manually toggle modal visibility\n     * @return {?}\n     */\n    toggle() {\n        return this._isShown ? this.hide() : this.show();\n    }\n    /**\n     * Allows to manually open modal\n     * @return {?}\n     */\n    show() {\n        this.dismissReason = null;\n        this.onShow.emit(this);\n        if (this._isShown) {\n            return;\n        }\n        clearTimeout(this.timerHideModal);\n        clearTimeout(this.timerRmBackDrop);\n        this._isShown = true;\n        this.checkScrollbar();\n        this.setScrollbar();\n        if (document$1 && document$1.body) {\n            if (document$1.body.classList.contains(CLASS_NAME.OPEN)) {\n                this.isNested = true;\n            }\n            else {\n                this._renderer.addClass(document$1.body, CLASS_NAME.OPEN);\n            }\n        }\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        () => {\n            this.showElement();\n        }));\n    }\n    /**\n     * Allows to manually close modal\n     * @param {?=} event\n     * @return {?}\n     */\n    hide(event) {\n        if (event) {\n            event.preventDefault();\n        }\n        this.onHide.emit(this);\n        // todo: add an option to prevent hiding\n        if (!this._isShown) {\n            return;\n        }\n        window$1.clearTimeout(this.timerHideModal);\n        window$1.clearTimeout(this.timerRmBackDrop);\n        this._isShown = false;\n        this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.removeClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        // this._addClassIn = false;\n        if (this._config.animated) {\n            this.timerHideModal = window$1.setTimeout((/**\n             * @return {?}\n             */\n            () => this.hideModal()), TRANSITION_DURATION);\n        }\n        else {\n            this.hideModal();\n        }\n    }\n    /**\n     * Private methods \\@internal\n     * @protected\n     * @param {?=} config\n     * @return {?}\n     */\n    getConfig(config) {\n        return Object.assign({}, this._config, config);\n    }\n    /**\n     *  Show dialog\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    showElement() {\n        // todo: replace this with component loader usage\n        if (!this._element.nativeElement.parentNode ||\n            this._element.nativeElement.parentNode.nodeType !== Node.ELEMENT_NODE) {\n            // don't move modals dom position\n            if (document$1 && document$1.body) {\n                document$1.body.appendChild(this._element.nativeElement);\n            }\n        }\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'false');\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-modal', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'block');\n        this._renderer.setProperty(this._element.nativeElement, 'scrollTop', 0);\n        if (this._config.animated) {\n            Utils.reflow(this._element.nativeElement);\n        }\n        // this._addClassIn = true;\n        this._renderer.addClass(this._element.nativeElement, CLASS_NAME.IN);\n        if (!isBs3()) {\n            this._renderer.addClass(this._element.nativeElement, CLASS_NAME.SHOW);\n        }\n        /** @type {?} */\n        const transitionComplete = (/**\n         * @return {?}\n         */\n        () => {\n            if (this._config.focus) {\n                this._element.nativeElement.focus();\n            }\n            this.onShown.emit(this);\n        });\n        if (this._config.animated) {\n            setTimeout(transitionComplete, TRANSITION_DURATION);\n        }\n        else {\n            transitionComplete();\n        }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    hideModal() {\n        this._renderer.setAttribute(this._element.nativeElement, 'aria-hidden', 'true');\n        this._renderer.setStyle(this._element.nativeElement, 'display', 'none');\n        this.showBackdrop((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.isNested) {\n                if (document$1 && document$1.body) {\n                    this._renderer.removeClass(document$1.body, CLASS_NAME.OPEN);\n                }\n                this.resetScrollbar();\n            }\n            this.resetAdjustments();\n            this.focusOtherModal();\n            this.onHidden.emit(this);\n        }));\n    }\n    // todo: original show was calling a callback when done, but we can use\n    // promise\n    /**\n     * \\@internal\n     * @protected\n     * @param {?=} callback\n     * @return {?}\n     */\n    showBackdrop(callback) {\n        if (this._isShown &&\n            this.config.backdrop &&\n            (!this.backdrop || !this.backdrop.instance.isShown)) {\n            this.removeBackdrop();\n            this._backdrop\n                .attach(ModalBackdropComponent)\n                .to('body')\n                .show({ isAnimated: this._config.animated });\n            this.backdrop = this._backdrop._componentRef;\n            if (!callback) {\n                return;\n            }\n            if (!this._config.animated) {\n                callback();\n                return;\n            }\n            setTimeout(callback, BACKDROP_TRANSITION_DURATION);\n        }\n        else if (!this._isShown && this.backdrop) {\n            this.backdrop.instance.isShown = false;\n            /** @type {?} */\n            const callbackRemove = (/**\n             * @return {?}\n             */\n            () => {\n                this.removeBackdrop();\n                if (callback) {\n                    callback();\n                }\n            });\n            if (this.backdrop.instance.isAnimated) {\n                this.timerRmBackDrop = window$1.setTimeout(callbackRemove, BACKDROP_TRANSITION_DURATION);\n            }\n            else {\n                callbackRemove();\n            }\n        }\n        else if (callback) {\n            callback();\n        }\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    removeBackdrop() {\n        this._backdrop.hide();\n    }\n    /**\n     * Events tricks\n     * @protected\n     * @return {?}\n     */\n    // no need for it\n    // protected setEscapeEvent():void {\n    //   if (this._isShown && this._config.keyboard) {\n    //     $(this._element).on(Event.KEYDOWN_DISMISS, (event) => {\n    //       if (event.which === 27) {\n    //         this.hide()\n    //       }\n    //     })\n    //\n    //   } else if (!this._isShown) {\n    //     $(this._element).off(Event.KEYDOWN_DISMISS)\n    //   }\n    // }\n    // protected setResizeEvent():void {\n    // console.log(this.renderer.listenGlobal('', Event.RESIZE));\n    // if (this._isShown) {\n    //   $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this))\n    // } else {\n    //   $(window).off(Event.RESIZE)\n    // }\n    // }\n    focusOtherModal() {\n        if (this._element.nativeElement.parentElement == null) {\n            return;\n        }\n        /** @type {?} */\n        const otherOpenedModals = this._element.nativeElement.parentElement.querySelectorAll('.in[bsModal]');\n        if (!otherOpenedModals.length) {\n            return;\n        }\n        otherOpenedModals[otherOpenedModals.length - 1].focus();\n    }\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    resetAdjustments() {\n        this._renderer.setStyle(this._element.nativeElement, 'paddingLeft', '');\n        this._renderer.setStyle(this._element.nativeElement, 'paddingRight', '');\n    }\n    /** Scroll bar tricks */\n    /**\n     * \\@internal\n     * @protected\n     * @return {?}\n     */\n    checkScrollbar() {\n        this.isBodyOverflowing = document$1.body.clientWidth < window$1.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    setScrollbar() {\n        if (!document$1) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window$1\n            .getComputedStyle(document$1.body)\n            .getPropertyValue('padding-right') || 0, 10);\n        if (this.isBodyOverflowing) {\n            document$1.body.style.paddingRight = `${this.originalBodyPadding +\n                this.scrollbarWidth}px`;\n        }\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    resetScrollbar() {\n        document$1.body.style.paddingRight = `${this.originalBodyPadding}px`;\n    }\n    // thx d.walsh\n    /**\n     * @protected\n     * @return {?}\n     */\n    getScrollbarWidth() {\n        /** @type {?} */\n        const scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document$1.body, scrollDiv);\n        /** @type {?} */\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document$1.body, scrollDiv);\n        return scrollbarWidth;\n    }\n}\nModalDirective.decorators = [\n    { type: Directive, args: [{\n                selector: '[bsModal]',\n                exportAs: 'bs-modal'\n            },] }\n];\n/** @nocollapse */\nModalDirective.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: ComponentLoaderFactory },\n    { type: ModalOptions, decorators: [{ type: Optional }, { type: Inject, args: [MODAL_CONFIG_DEFAULT_OVERRIDE,] }] }\n];\nModalDirective.propDecorators = {\n    config: [{ type: Input }],\n    onShow: [{ type: Output }],\n    onShown: [{ type: Output }],\n    onHide: [{ type: Output }],\n    onHidden: [{ type: Output }],\n    onClickStarted: [{ type: HostListener, args: ['mousedown', ['$event'],] }],\n    onClickStop: [{ type: HostListener, args: ['mouseup', ['$event'],] }],\n    onEsc: [{ type: HostListener, args: ['keydown.esc', ['$event'],] }]\n};\nif (false) {\n    /**\n     * This event fires immediately when the `show` instance method is called.\n     * @type {?}\n     */\n    ModalDirective.prototype.onShow;\n    /**\n     * This event is fired when the modal has been made visible to the user\n     * (will wait for CSS transitions to complete)\n     * @type {?}\n     */\n    ModalDirective.prototype.onShown;\n    /**\n     * This event is fired immediately when\n     * the hide instance method has been called.\n     * @type {?}\n     */\n    ModalDirective.prototype.onHide;\n    /**\n     * This event is fired when the modal has finished being\n     * hidden from the user (will wait for CSS transitions to complete).\n     * @type {?}\n     */\n    ModalDirective.prototype.onHidden;\n    /**\n     * This field contains last dismiss reason.\n     * Possible values: `backdrop-click`, `esc` and `id: number`\n     * (if modal was closed by direct call of `.hide()`).\n     * @type {?}\n     */\n    ModalDirective.prototype.dismissReason;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype._config;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype._isShown;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.isBodyOverflowing;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.originalBodyPadding;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.scrollbarWidth;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.timerHideModal;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.timerRmBackDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    ModalDirective.prototype.backdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._backdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype.isNested;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype.clickStartedInContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    ModalDirective.prototype._renderer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BsModalService {\n    /**\n     * @param {?} rendererFactory\n     * @param {?} clf\n     * @param {?} modalDefaultOption\n     */\n    constructor(rendererFactory, clf, modalDefaultOption) {\n        this.clf = clf;\n        this.modalDefaultOption = modalDefaultOption;\n        // tslint:disable-next-line:no-any\n        this.onShow = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onShown = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHide = new EventEmitter();\n        // tslint:disable-next-line:no-any\n        this.onHidden = new EventEmitter();\n        this.isBodyOverflowing = false;\n        this.originalBodyPadding = 0;\n        this.scrollbarWidth = 0;\n        this.modalsCount = 0;\n        this.lastDismissReason = null;\n        this.loaders = [];\n        this._backdropLoader = this.clf.createLoader(null, null, null);\n        this._renderer = rendererFactory.createRenderer(null, null);\n        this.config = modalDefaultOption ?\n            (Object.assign({}, modalConfigDefaults, modalDefaultOption)) :\n            modalConfigDefaults;\n    }\n    /**\n     * Shows a modal\n     * @template T\n     * @param {?} content\n     * @param {?=} config\n     * @return {?}\n     */\n    show(\n    // tslint:disable-next-line:no-any\n    content, config) {\n        this.modalsCount++;\n        this._createLoaders();\n        /** @type {?} */\n        const id = (config === null || config === void 0 ? void 0 : config.id) || (new Date()).getUTCMilliseconds();\n        this.config = this.modalDefaultOption ?\n            Object.assign({}, modalConfigDefaults, this.modalDefaultOption, config) :\n            Object.assign({}, modalConfigDefaults, config);\n        this.config.id = id;\n        this._showBackdrop();\n        this.lastDismissReason = null;\n        return this._showModal(content);\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    hide(id) {\n        if (this.modalsCount === 1 || id == null) {\n            this._hideBackdrop();\n            this.resetScrollbar();\n        }\n        this.modalsCount = this.modalsCount >= 1 && id != null ? this.modalsCount - 1 : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => {\n            this._hideModal(id);\n            this.removeLoaders(id);\n        }), this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0);\n    }\n    /**\n     * @return {?}\n     */\n    _showBackdrop() {\n        /** @type {?} */\n        const isBackdropEnabled = this.config.backdrop || this.config.backdrop === 'static';\n        /** @type {?} */\n        const isBackdropInDOM = !this.backdropRef || !this.backdropRef.instance.isShown;\n        if (this.modalsCount === 1) {\n            this.removeBackdrop();\n            if (isBackdropEnabled && isBackdropInDOM) {\n                this._backdropLoader\n                    .attach(ModalBackdropComponent)\n                    .to('body')\n                    .show({ isAnimated: this.config.animated });\n                this.backdropRef = this._backdropLoader._componentRef;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _hideBackdrop() {\n        if (!this.backdropRef) {\n            return;\n        }\n        this.backdropRef.instance.isShown = false;\n        /** @type {?} */\n        const duration = this.config.animated ? TRANSITION_DURATIONS.BACKDROP : 0;\n        setTimeout((/**\n         * @return {?}\n         */\n        () => this.removeBackdrop()), duration);\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _showModal(content) {\n        var _a;\n        /** @type {?} */\n        const modalLoader = this.loaders[this.loaders.length - 1];\n        if (this.config && this.config.providers) {\n            for (const provider of this.config.providers) {\n                modalLoader.provide(provider);\n            }\n        }\n        /** @type {?} */\n        const bsModalRef = new BsModalRef();\n        /** @type {?} */\n        const modalContainerRef = modalLoader\n            .provide({ provide: ModalOptions, useValue: this.config })\n            .provide({ provide: BsModalRef, useValue: bsModalRef })\n            .attach(ModalContainerComponent)\n            .to('body');\n        bsModalRef.hide = (/**\n         * @return {?}\n         */\n        () => modalContainerRef.instance.hide());\n        bsModalRef.setClass = (/**\n         * @param {?} newClass\n         * @return {?}\n         */\n        (newClass) => {\n            modalContainerRef.instance.config.class = newClass;\n        });\n        bsModalRef.onHidden = new EventEmitter();\n        bsModalRef.onHide = new EventEmitter();\n        this.copyEvent(modalLoader.onBeforeHide, bsModalRef.onHide);\n        this.copyEvent(modalLoader.onHidden, bsModalRef.onHidden);\n        // call 'show' method after assign setClass in bsModalRef.\n        // it makes modal component's bsModalRef available to call setClass method\n        modalContainerRef.show({\n            content,\n            isAnimated: this.config.animated,\n            initialState: this.config.initialState,\n            bsModalService: this,\n            id: this.config.id\n        });\n        modalContainerRef.instance.level = this.getModalsCount();\n        bsModalRef.content = modalLoader.getInnerComponent() || null;\n        bsModalRef.id = (_a = modalContainerRef.instance.config) === null || _a === void 0 ? void 0 : _a.id;\n        return bsModalRef;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    _hideModal(id) {\n        if (id != null) {\n            /** @type {?} */\n            const indexToRemove = this.loaders.findIndex((/**\n             * @param {?} loader\n             * @return {?}\n             */\n            loader => loader.instance.config.id === id));\n            /** @type {?} */\n            const modalLoader = this.loaders[indexToRemove];\n            if (modalLoader) {\n                modalLoader.hide(id);\n            }\n        }\n        else {\n            this.loaders.forEach((/**\n             * @param {?} loader\n             * @return {?}\n             */\n            (loader) => {\n                loader.hide(loader.instance.config.id);\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getModalsCount() {\n        return this.modalsCount;\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    setDismissReason(reason) {\n        this.lastDismissReason = reason;\n    }\n    /**\n     * @return {?}\n     */\n    removeBackdrop() {\n        this._renderer.removeClass(document.body, CLASS_NAME.OPEN);\n        this._backdropLoader.hide();\n        this.backdropRef = null;\n    }\n    /** Checks if the body is overflowing and sets scrollbar width */\n    /**\n     * \\@internal\n     * @return {?}\n     */\n    checkScrollbar() {\n        this.isBodyOverflowing = document.body.clientWidth < window.innerWidth;\n        this.scrollbarWidth = this.getScrollbarWidth();\n    }\n    /**\n     * @return {?}\n     */\n    setScrollbar() {\n        if (!document) {\n            return;\n        }\n        this.originalBodyPadding = parseInt(window\n            .getComputedStyle(document.body)\n            .getPropertyValue('padding-right') || '0', 10);\n        if (this.isBodyOverflowing) {\n            document.body.style.paddingRight = `${this.originalBodyPadding +\n                this.scrollbarWidth}px`;\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    resetScrollbar() {\n        document.body.style.paddingRight = `${this.originalBodyPadding}px`;\n    }\n    // thx d.walsh\n    /**\n     * @private\n     * @return {?}\n     */\n    getScrollbarWidth() {\n        /** @type {?} */\n        const scrollDiv = this._renderer.createElement('div');\n        this._renderer.addClass(scrollDiv, CLASS_NAME.SCROLLBAR_MEASURER);\n        this._renderer.appendChild(document.body, scrollDiv);\n        /** @type {?} */\n        const scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n        this._renderer.removeChild(document.body, scrollDiv);\n        return scrollbarWidth;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _createLoaders() {\n        /** @type {?} */\n        const loader = this.clf.createLoader(null, null, null);\n        this.copyEvent(loader.onBeforeShow, this.onShow);\n        this.copyEvent(loader.onShown, this.onShown);\n        this.copyEvent(loader.onBeforeHide, this.onHide);\n        this.copyEvent(loader.onHidden, this.onHidden);\n        this.loaders.push(loader);\n    }\n    /**\n     * @private\n     * @param {?=} id\n     * @return {?}\n     */\n    removeLoaders(id) {\n        if (id != null) {\n            /** @type {?} */\n            const indexToRemove = this.loaders.findIndex((/**\n             * @param {?} loader\n             * @return {?}\n             */\n            loader => loader.instance.config.id === id));\n            if (indexToRemove >= 0) {\n                this.loaders.splice(indexToRemove, 1);\n                this.loaders.forEach((/**\n                 * @param {?} loader\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (loader, i) => {\n                    loader.instance.level = i + 1;\n                }));\n            }\n        }\n        else {\n            this.loaders.splice(0, this.loaders.length);\n        }\n    }\n    // tslint:disable-next-line:no-any\n    /**\n     * @private\n     * @param {?} from\n     * @param {?} to\n     * @return {?}\n     */\n    copyEvent(from, to) {\n        from.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        (data) => {\n            to.emit(this.lastDismissReason || data);\n        }));\n    }\n}\nBsModalService.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBsModalService.ctorParameters = () => [\n    { type: RendererFactory2 },\n    { type: ComponentLoaderFactory },\n    { type: ModalOptions, decorators: [{ type: Optional }, { type: Inject, args: [MODAL_CONFIG_DEFAULT_OVERRIDE,] }] }\n];\nif (false) {\n    /** @type {?} */\n    BsModalService.prototype.config;\n    /** @type {?} */\n    BsModalService.prototype.onShow;\n    /** @type {?} */\n    BsModalService.prototype.onShown;\n    /** @type {?} */\n    BsModalService.prototype.onHide;\n    /** @type {?} */\n    BsModalService.prototype.onHidden;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.isBodyOverflowing;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.originalBodyPadding;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.scrollbarWidth;\n    /**\n     * @type {?}\n     * @protected\n     */\n    BsModalService.prototype.backdropRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype._backdropLoader;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.modalsCount;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.lastDismissReason;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.loaders;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.clf;\n    /**\n     * @type {?}\n     * @private\n     */\n    BsModalService.prototype.modalDefaultOption;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ModalModule {\n    /**\n     * @return {?}\n     */\n    static forRoot() {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    }\n    /**\n     * @return {?}\n     */\n    static forChild() {\n        return {\n            ngModule: ModalModule,\n            providers: [BsModalService, ComponentLoaderFactory, PositioningService]\n        };\n    }\n}\nModalModule.decorators = [\n    { type: NgModule, args: [{\n                declarations: [\n                    ModalBackdropComponent,\n                    ModalDirective,\n                    ModalContainerComponent\n                ],\n                exports: [ModalBackdropComponent, ModalDirective],\n                entryComponents: [ModalBackdropComponent, ModalContainerComponent]\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BsModalRef, BsModalService, MODAL_CONFIG_DEFAULT_OVERRIDE, ModalBackdropComponent, ModalBackdropOptions, ModalContainerComponent, ModalDirective, ModalModule, ModalOptions, CLASS_NAME as ɵa };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}