{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './auth-service';\nexport const AuthGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const isAuthenticated = authService.isAuthenticated();\n  if (isAuthenticated) {\n    return true;\n  } else {\n    return router.createUrlTree(['/login'], {\n      queryParams: {\n        returnUrl: state.url\n      }\n    });\n  }\n};","map":{"version":3,"names":["inject","Router","AuthService","AuthGuard","route","state","authService","router","isAuthenticated","createUrlTree","queryParams","returnUrl","url"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\services\\AuthGuard.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivateFn, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthService } from './auth-service';\r\n\r\nexport const AuthGuard: CanActivateFn = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) => {\r\n  const authService = inject(AuthService);\r\n  const router = inject(Router);\r\n\r\n  const isAuthenticated = authService.isAuthenticated();\r\n\r\n  if (isAuthenticated) {\r\n    return true;\r\n  } else {\r\n    return router.createUrlTree(['/login'], { queryParams: { returnUrl: state.url } });\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAAgDC,MAAM,QAAsC,iBAAiB;AAG7G,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAA6B,EAAEC,KAA0B,KAAI;EACpG,MAAMC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,MAAMO,eAAe,GAAGF,WAAW,CAACE,eAAe,EAAE;EAErD,IAAIA,eAAe,EAAE;IACnB,OAAO,IAAI;EACb,CAAC,MAAM;IACL,OAAOD,MAAM,CAACE,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE;MAAEC,WAAW,EAAE;QAAEC,SAAS,EAAEN,KAAK,CAACO;MAAG;IAAE,CAAE,CAAC;EACpF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}