{"ast":null,"code":"import { EventEmitter, Injector, ElementRef, TemplateRef, Injectable, ComponentFactoryResolver, NgZone, ApplicationRef } from '@angular/core';\nimport { listenToTriggersV2, registerOutsideClick, registerEscClick } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass BsComponentRef {}\nif (false) {\n  /** @type {?} */\n  BsComponentRef.prototype.templateRef;\n  /** @type {?} */\n  BsComponentRef.prototype.viewContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nclass ContentRef {\n  /**\n   * @param {?} nodes\n   * @param {?=} viewRef\n   * @param {?=} componentRef\n   */\n  constructor( /* tslint:disable-next-line: no-any */\n  nodes, viewRef, /* tslint:disable-next-line: no-any */\n  componentRef) {\n    this.nodes = nodes;\n    this.viewRef = viewRef;\n    this.componentRef = componentRef;\n  }\n}\nif (false) {\n  /** @type {?} */\n  ContentRef.prototype.nodes;\n  /** @type {?} */\n  ContentRef.prototype.viewRef;\n  /** @type {?} */\n  ContentRef.prototype.componentRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ComponentLoader {\n  /**\n   * Do not use this directly, it should be instanced via\n   * `ComponentLoadFactory.attach`\n   * \\@internal\n   * @param {?} _viewContainerRef\n   * @param {?} _renderer\n   * @param {?} _elementRef\n   * @param {?} _injector\n   * @param {?} _componentFactoryResolver\n   * @param {?} _ngZone\n   * @param {?} _applicationRef\n   * @param {?} _posService\n   */\n  // tslint:disable-next-line\n  constructor(_viewContainerRef, _renderer, _elementRef, _injector, _componentFactoryResolver, _ngZone, _applicationRef, _posService) {\n    this._viewContainerRef = _viewContainerRef;\n    this._renderer = _renderer;\n    this._elementRef = _elementRef;\n    this._injector = _injector;\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._ngZone = _ngZone;\n    this._applicationRef = _applicationRef;\n    this._posService = _posService;\n    this.onBeforeShow = new EventEmitter();\n    /* tslint:disable-next-line: no-any*/\n    this.onShown = new EventEmitter();\n    /* tslint:disable-next-line: no-any*/\n    this.onBeforeHide = new EventEmitter();\n    this.onHidden = new EventEmitter();\n    this._providers = [];\n    this._isHiding = false;\n    /**\n     * A selector used if container element was not found\n     */\n    this.containerDefaultSelector = 'body';\n    this._listenOpts = {};\n    this._globalListener = Function.prototype;\n  }\n  /**\n   * @return {?}\n   */\n  get isShown() {\n    if (this._isHiding) {\n      return false;\n    }\n    return !!this._componentRef;\n  }\n  /**\n   * @param {?} compType\n   * @return {?}\n   */\n  attach(compType) {\n    this._componentFactory = this._componentFactoryResolver.resolveComponentFactory(compType);\n    return this;\n  }\n  // todo: add behaviour: to target element, `body`, custom element\n  /**\n   * @param {?=} container\n   * @return {?}\n   */\n  to(container) {\n    this.container = container || this.container;\n    return this;\n  }\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n  position(opts) {\n    this.attachment = opts.attachment || this.attachment;\n    /* tslint:disable-next-line: no-unnecessary-type-assertion */\n    this._elementRef = ( /** @type {?} */opts.target) || this._elementRef;\n    return this;\n  }\n  /**\n   * @param {?} provider\n   * @return {?}\n   */\n  provide(provider) {\n    this._providers.push(provider);\n    return this;\n  }\n  // todo: appendChild to element or document.querySelector(this.container)\n  /**\n   * @param {?=} opts\n   * @return {?}\n   */\n  show(opts = {}) {\n    this._subscribePositioning();\n    this._innerComponent = null;\n    if (!this._componentRef) {\n      this.onBeforeShow.emit();\n      this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n      /** @type {?} */\n      const injector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n      this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n      this._applicationRef.attachView(this._componentRef.hostView);\n      // this._componentRef = this._viewContainerRef\n      //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n      this.instance = this._componentRef.instance;\n      Object.assign(this._componentRef.instance, opts);\n      if (this.container instanceof ElementRef) {\n        this.container.nativeElement.appendChild(this._componentRef.location.nativeElement);\n      }\n      if (typeof this.container === 'string' && typeof document !== 'undefined') {\n        /** @type {?} */\n        const selectedElement = document.querySelector(this.container) || document.querySelector(this.containerDefaultSelector);\n        selectedElement.appendChild(this._componentRef.location.nativeElement);\n      }\n      if (!this.container && this._elementRef && this._elementRef.nativeElement.parentElement) {\n        this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement);\n      }\n      // we need to manually invoke change detection since events registered\n      // via\n      // Renderer::listen() are not picked up by change detection with the\n      // OnPush strategy\n      if (this._contentRef.componentRef) {\n        this._innerComponent = this._contentRef.componentRef.instance;\n        this._contentRef.componentRef.changeDetectorRef.markForCheck();\n        this._contentRef.componentRef.changeDetectorRef.detectChanges();\n      }\n      this._componentRef.changeDetectorRef.markForCheck();\n      this._componentRef.changeDetectorRef.detectChanges();\n      this.onShown.emit(opts.id ? {\n        id: opts.id\n      } : this._componentRef.instance);\n    }\n    this._registerOutsideClick();\n    return this._componentRef;\n  }\n  /**\n   * @param {?=} id\n   * @return {?}\n   */\n  hide(id) {\n    if (!this._componentRef) {\n      return this;\n    }\n    this._posService.deletePositionElement(this._componentRef.location);\n    this.onBeforeHide.emit(this._componentRef.instance);\n    /** @type {?} */\n    const componentEl = this._componentRef.location.nativeElement;\n    componentEl.parentNode.removeChild(componentEl);\n    if (this._contentRef.componentRef) {\n      this._contentRef.componentRef.destroy();\n    }\n    if (this._viewContainerRef && this._contentRef.viewRef) {\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n    }\n    if (this._contentRef.viewRef) {\n      this._contentRef.viewRef.destroy();\n    }\n    this._contentRef = null;\n    this._componentRef = null;\n    this._removeGlobalListener();\n    this.onHidden.emit(id ? {\n      id\n    } : null);\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n  toggle() {\n    if (this.isShown) {\n      this.hide();\n      return;\n    }\n    this.show();\n  }\n  /**\n   * @return {?}\n   */\n  dispose() {\n    if (this.isShown) {\n      this.hide();\n    }\n    this._unsubscribePositioning();\n    if (this._unregisterListenersFn) {\n      this._unregisterListenersFn();\n    }\n  }\n  /**\n   * @param {?} listenOpts\n   * @return {?}\n   */\n  listen(listenOpts) {\n    this.triggers = listenOpts.triggers || this.triggers;\n    this._listenOpts.outsideClick = listenOpts.outsideClick;\n    this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n    listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n    /** @type {?} */\n    const hide = this._listenOpts.hide =\n    /**\n    * @return {?}\n    */\n    () => listenOpts.hide ? listenOpts.hide() : void this.hide();\n    /** @type {?} */\n    const show = this._listenOpts.show =\n    /**\n    * @param {?} registerHide\n    * @return {?}\n    */\n    registerHide => {\n      listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n      registerHide();\n    };\n    /** @type {?} */\n    const toggle =\n    /**\n    * @param {?} registerHide\n    * @return {?}\n    */\n    registerHide => {\n      this.isShown ? hide() : show(registerHide);\n    };\n    this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n      target: listenOpts.target,\n      triggers: listenOpts.triggers,\n      show,\n      hide,\n      toggle\n    });\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n  _removeGlobalListener() {\n    if (this._globalListener) {\n      this._globalListener();\n      this._globalListener = null;\n    }\n  }\n  /**\n   * @param {?} vRef\n   * @param {?} template\n   * @return {?}\n   */\n  attachInline(vRef, /* tslint:disable-next-line: no-any*/\n  template) {\n    this._inlineViewRef = vRef.createEmbeddedView(template);\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n  _registerOutsideClick() {\n    if (!this._componentRef || !this._componentRef.location) {\n      return;\n    }\n    // why: should run after first event bubble\n    if (this._listenOpts.outsideClick) {\n      /** @type {?} */\n      const target = this._componentRef.location.nativeElement;\n      setTimeout(\n      /**\n      * @return {?}\n      */\n      () => {\n        this._globalListener = registerOutsideClick(this._renderer, {\n          targets: [target, this._elementRef.nativeElement],\n          outsideClick: this._listenOpts.outsideClick,\n          hide: (\n          /**\n          * @return {?}\n          */\n          () => this._listenOpts.hide())\n        });\n      });\n    }\n    if (this._listenOpts.outsideEsc) {\n      /** @type {?} */\n      const target = this._componentRef.location.nativeElement;\n      this._globalListener = registerEscClick(this._renderer, {\n        targets: [target, this._elementRef.nativeElement],\n        outsideEsc: this._listenOpts.outsideEsc,\n        hide: (\n        /**\n        * @return {?}\n        */\n        () => this._listenOpts.hide())\n      });\n    }\n  }\n  /**\n   * @return {?}\n   */\n  getInnerComponent() {\n    return this._innerComponent;\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _subscribePositioning() {\n    if (this._zoneSubscription || !this.attachment) {\n      return;\n    }\n    this.onShown.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      this._posService.position({\n        element: this._componentRef.location,\n        target: this._elementRef,\n        attachment: this.attachment,\n        appendToBody: this.container === 'body'\n      });\n    });\n    this._zoneSubscription = this._ngZone.onStable.subscribe(\n    /**\n    * @return {?}\n    */\n    () => {\n      if (!this._componentRef) {\n        return;\n      }\n      this._posService.calcPosition();\n    });\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n  _unsubscribePositioning() {\n    if (!this._zoneSubscription) {\n      return;\n    }\n    this._zoneSubscription.unsubscribe();\n    this._zoneSubscription = null;\n  }\n  /**\n   * @private\n   * @param {?} content\n   * @param {?=} context\n   * @param {?=} initialState\n   * @return {?}\n   */\n  _getContentRef( /* tslint:disable-next-line: no-any*/\n  content, /* tslint:disable-next-line: no-any*/\n  context, /* tslint:disable-next-line: no-any*/\n  initialState) {\n    if (!content) {\n      return new ContentRef([]);\n    }\n    if (content instanceof TemplateRef) {\n      if (this._viewContainerRef) {\n        /** @type {?} */\n        const _viewRef = this._viewContainerRef.createEmbeddedView(content, context);\n        _viewRef.markForCheck();\n        return new ContentRef([_viewRef.rootNodes], _viewRef);\n      }\n      /** @type {?} */\n      const viewRef = content.createEmbeddedView({});\n      this._applicationRef.attachView(viewRef);\n      return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    if (typeof content === 'function') {\n      /** @type {?} */\n      const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n      /** @type {?} */\n      const modalContentInjector = Injector.create({\n        providers: this._providers,\n        parent: this._injector\n      });\n      /** @type {?} */\n      const componentRef = contentCmptFactory.create(modalContentInjector);\n      Object.assign(componentRef.instance, initialState);\n      this._applicationRef.attachView(componentRef.hostView);\n      return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    }\n    return new ContentRef([[this._renderer.createText(`${content}`)]]);\n  }\n}\nif (false) {\n  /** @type {?} */\n  ComponentLoader.prototype.onBeforeShow;\n  /** @type {?} */\n  ComponentLoader.prototype.onShown;\n  /** @type {?} */\n  ComponentLoader.prototype.onBeforeHide;\n  /** @type {?} */\n  ComponentLoader.prototype.onHidden;\n  /** @type {?} */\n  ComponentLoader.prototype.instance;\n  /** @type {?} */\n  ComponentLoader.prototype._componentRef;\n  /** @type {?} */\n  ComponentLoader.prototype._inlineViewRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._providers;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._componentFactory;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._zoneSubscription;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._contentRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._innerComponent;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._unregisterListenersFn;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._isHiding;\n  /**\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype.attachment;\n  /**\n   * A selector specifying the element the popover should be appended to.\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype.container;\n  /**\n   * A selector used if container element was not found\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype.containerDefaultSelector;\n  /**\n   * Specifies events that should trigger. Supports a space separated list of\n   * event names.\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype.triggers;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._listenOpts;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._globalListener;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._viewContainerRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._renderer;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._elementRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._injector;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._componentFactoryResolver;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._ngZone;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._applicationRef;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoader.prototype._posService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ComponentLoaderFactory {\n  /**\n   * @param {?} _componentFactoryResolver\n   * @param {?} _ngZone\n   * @param {?} _injector\n   * @param {?} _posService\n   * @param {?} _applicationRef\n   */\n  constructor(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._ngZone = _ngZone;\n    this._injector = _injector;\n    this._posService = _posService;\n    this._applicationRef = _applicationRef;\n  }\n  /**\n   *\n   * @template T\n   * @param {?} _elementRef\n   * @param {?} _viewContainerRef\n   * @param {?} _renderer\n   * @return {?}\n   */\n  createLoader(_elementRef, _viewContainerRef, _renderer) {\n    return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n  }\n}\nComponentLoaderFactory.decorators = [{\n  type: Injectable\n}];\n/** @nocollapse */\nComponentLoaderFactory.ctorParameters = () => [{\n  type: ComponentFactoryResolver\n}, {\n  type: NgZone\n}, {\n  type: Injector\n}, {\n  type: PositioningService\n}, {\n  type: ApplicationRef\n}];\nif (false) {\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoaderFactory.prototype._componentFactoryResolver;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoaderFactory.prototype._ngZone;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoaderFactory.prototype._injector;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoaderFactory.prototype._posService;\n  /**\n   * @type {?}\n   * @private\n   */\n  ComponentLoaderFactory.prototype._applicationRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BsComponentRef, ComponentLoader, ComponentLoaderFactory, ContentRef };","map":{"version":3,"names":["EventEmitter","Injector","ElementRef","TemplateRef","Injectable","ComponentFactoryResolver","NgZone","ApplicationRef","listenToTriggersV2","registerOutsideClick","registerEscClick","PositioningService","BsComponentRef","prototype","templateRef","viewContainer","ContentRef","constructor","nodes","viewRef","componentRef","ComponentLoader","_viewContainerRef","_renderer","_elementRef","_injector","_componentFactoryResolver","_ngZone","_applicationRef","_posService","onBeforeShow","onShown","onBeforeHide","onHidden","_providers","_isHiding","containerDefaultSelector","_listenOpts","_globalListener","Function","isShown","_componentRef","attach","compType","_componentFactory","resolveComponentFactory","to","container","position","opts","attachment","target","provide","provider","push","show","_subscribePositioning","_innerComponent","emit","_contentRef","_getContentRef","content","context","initialState","injector","create","providers","parent","attachView","hostView","instance","Object","assign","nativeElement","appendChild","location","document","selectedElement","querySelector","parentElement","changeDetectorRef","markForCheck","detectChanges","id","_registerOutsideClick","hide","deletePositionElement","componentEl","parentNode","removeChild","destroy","remove","indexOf","_removeGlobalListener","toggle","dispose","_unsubscribePositioning","_unregisterListenersFn","listen","listenOpts","triggers","outsideClick","outsideEsc","registerHide","attachInline","vRef","template","_inlineViewRef","createEmbeddedView","setTimeout","targets","getInnerComponent","_zoneSubscription","subscribe","element","appendToBody","onStable","calcPosition","unsubscribe","_viewRef","rootNodes","contentCmptFactory","modalContentInjector","createText","ComponentLoaderFactory","createLoader","decorators","type","ctorParameters"],"sources":["C:/Users/luana/OneDrive/Área de Trabalho/Lua/project-angular-login/project-angular-login/node_modules/ngx-bootstrap/component-loader/fesm2015/ngx-bootstrap-component-loader.js"],"sourcesContent":["import { EventEmitter, Injector, ElementRef, TemplateRef, Injectable, ComponentFactoryResolver, NgZone, ApplicationRef } from '@angular/core';\nimport { listenToTriggersV2, registerOutsideClick, registerEscClick } from 'ngx-bootstrap/utils';\nimport { PositioningService } from 'ngx-bootstrap/positioning';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass BsComponentRef {\n}\nif (false) {\n    /** @type {?} */\n    BsComponentRef.prototype.templateRef;\n    /** @type {?} */\n    BsComponentRef.prototype.viewContainer;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @copyright Valor Software\n * @copyright Angular ng-bootstrap team\n */\nclass ContentRef {\n    /**\n     * @param {?} nodes\n     * @param {?=} viewRef\n     * @param {?=} componentRef\n     */\n    constructor(\n    /* tslint:disable-next-line: no-any */\n    nodes, viewRef, \n    /* tslint:disable-next-line: no-any */\n    componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    ContentRef.prototype.nodes;\n    /** @type {?} */\n    ContentRef.prototype.viewRef;\n    /** @type {?} */\n    ContentRef.prototype.componentRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n */\nclass ComponentLoader {\n    /**\n     * Do not use this directly, it should be instanced via\n     * `ComponentLoadFactory.attach`\n     * \\@internal\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _elementRef\n     * @param {?} _injector\n     * @param {?} _componentFactoryResolver\n     * @param {?} _ngZone\n     * @param {?} _applicationRef\n     * @param {?} _posService\n     */\n    // tslint:disable-next-line\n    constructor(_viewContainerRef, _renderer, _elementRef, _injector, _componentFactoryResolver, _ngZone, _applicationRef, _posService) {\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._elementRef = _elementRef;\n        this._injector = _injector;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._ngZone = _ngZone;\n        this._applicationRef = _applicationRef;\n        this._posService = _posService;\n        this.onBeforeShow = new EventEmitter();\n        /* tslint:disable-next-line: no-any*/\n        this.onShown = new EventEmitter();\n        /* tslint:disable-next-line: no-any*/\n        this.onBeforeHide = new EventEmitter();\n        this.onHidden = new EventEmitter();\n        this._providers = [];\n        this._isHiding = false;\n        /**\n         * A selector used if container element was not found\n         */\n        this.containerDefaultSelector = 'body';\n        this._listenOpts = {};\n        this._globalListener = Function.prototype;\n    }\n    /**\n     * @return {?}\n     */\n    get isShown() {\n        if (this._isHiding) {\n            return false;\n        }\n        return !!this._componentRef;\n    }\n    /**\n     * @param {?} compType\n     * @return {?}\n     */\n    attach(compType) {\n        this._componentFactory = this._componentFactoryResolver\n            .resolveComponentFactory(compType);\n        return this;\n    }\n    // todo: add behaviour: to target element, `body`, custom element\n    /**\n     * @param {?=} container\n     * @return {?}\n     */\n    to(container) {\n        this.container = container || this.container;\n        return this;\n    }\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    position(opts) {\n        this.attachment = opts.attachment || this.attachment;\n        /* tslint:disable-next-line: no-unnecessary-type-assertion */\n        this._elementRef = ((/** @type {?} */ (opts.target))) || this._elementRef;\n        return this;\n    }\n    /**\n     * @param {?} provider\n     * @return {?}\n     */\n    provide(provider) {\n        this._providers.push(provider);\n        return this;\n    }\n    // todo: appendChild to element or document.querySelector(this.container)\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    show(opts = {}) {\n        this._subscribePositioning();\n        this._innerComponent = null;\n        if (!this._componentRef) {\n            this.onBeforeShow.emit();\n            this._contentRef = this._getContentRef(opts.content, opts.context, opts.initialState);\n            /** @type {?} */\n            const injector = Injector.create({\n                providers: this._providers,\n                parent: this._injector\n            });\n            this._componentRef = this._componentFactory.create(injector, this._contentRef.nodes);\n            this._applicationRef.attachView(this._componentRef.hostView);\n            // this._componentRef = this._viewContainerRef\n            //   .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\n            this.instance = this._componentRef.instance;\n            Object.assign(this._componentRef.instance, opts);\n            if (this.container instanceof ElementRef) {\n                this.container.nativeElement.appendChild(this._componentRef.location.nativeElement);\n            }\n            if (typeof this.container === 'string' && typeof document !== 'undefined') {\n                /** @type {?} */\n                const selectedElement = document.querySelector(this.container) ||\n                    document.querySelector(this.containerDefaultSelector);\n                selectedElement.appendChild(this._componentRef.location.nativeElement);\n            }\n            if (!this.container &&\n                this._elementRef &&\n                this._elementRef.nativeElement.parentElement) {\n                this._elementRef.nativeElement.parentElement.appendChild(this._componentRef.location.nativeElement);\n            }\n            // we need to manually invoke change detection since events registered\n            // via\n            // Renderer::listen() are not picked up by change detection with the\n            // OnPush strategy\n            if (this._contentRef.componentRef) {\n                this._innerComponent = this._contentRef.componentRef.instance;\n                this._contentRef.componentRef.changeDetectorRef.markForCheck();\n                this._contentRef.componentRef.changeDetectorRef.detectChanges();\n            }\n            this._componentRef.changeDetectorRef.markForCheck();\n            this._componentRef.changeDetectorRef.detectChanges();\n            this.onShown.emit(opts.id ? { id: opts.id } : this._componentRef.instance);\n        }\n        this._registerOutsideClick();\n        return this._componentRef;\n    }\n    /**\n     * @param {?=} id\n     * @return {?}\n     */\n    hide(id) {\n        if (!this._componentRef) {\n            return this;\n        }\n        this._posService.deletePositionElement(this._componentRef.location);\n        this.onBeforeHide.emit(this._componentRef.instance);\n        /** @type {?} */\n        const componentEl = this._componentRef.location.nativeElement;\n        componentEl.parentNode.removeChild(componentEl);\n        if (this._contentRef.componentRef) {\n            this._contentRef.componentRef.destroy();\n        }\n        if (this._viewContainerRef && this._contentRef.viewRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\n        }\n        if (this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._contentRef = null;\n        this._componentRef = null;\n        this._removeGlobalListener();\n        this.onHidden.emit(id ? { id } : null);\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    toggle() {\n        if (this.isShown) {\n            this.hide();\n            return;\n        }\n        this.show();\n    }\n    /**\n     * @return {?}\n     */\n    dispose() {\n        if (this.isShown) {\n            this.hide();\n        }\n        this._unsubscribePositioning();\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n    }\n    /**\n     * @param {?} listenOpts\n     * @return {?}\n     */\n    listen(listenOpts) {\n        this.triggers = listenOpts.triggers || this.triggers;\n        this._listenOpts.outsideClick = listenOpts.outsideClick;\n        this._listenOpts.outsideEsc = listenOpts.outsideEsc;\n        listenOpts.target = listenOpts.target || this._elementRef.nativeElement;\n        /** @type {?} */\n        const hide = (this._listenOpts.hide = (/**\n         * @return {?}\n         */\n        () => listenOpts.hide ? listenOpts.hide() : void this.hide()));\n        /** @type {?} */\n        const show = (this._listenOpts.show = (/**\n         * @param {?} registerHide\n         * @return {?}\n         */\n        (registerHide) => {\n            listenOpts.show ? listenOpts.show(registerHide) : this.show(registerHide);\n            registerHide();\n        }));\n        /** @type {?} */\n        const toggle = (/**\n         * @param {?} registerHide\n         * @return {?}\n         */\n        (registerHide) => {\n            this.isShown ? hide() : show(registerHide);\n        });\n        this._unregisterListenersFn = listenToTriggersV2(this._renderer, {\n            target: listenOpts.target,\n            triggers: listenOpts.triggers,\n            show,\n            hide,\n            toggle\n        });\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalListener) {\n            this._globalListener();\n            this._globalListener = null;\n        }\n    }\n    /**\n     * @param {?} vRef\n     * @param {?} template\n     * @return {?}\n     */\n    attachInline(vRef, \n    /* tslint:disable-next-line: no-any*/\n    template) {\n        this._inlineViewRef = vRef.createEmbeddedView(template);\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    _registerOutsideClick() {\n        if (!this._componentRef || !this._componentRef.location) {\n            return;\n        }\n        // why: should run after first event bubble\n        if (this._listenOpts.outsideClick) {\n            /** @type {?} */\n            const target = this._componentRef.location.nativeElement;\n            setTimeout((/**\n             * @return {?}\n             */\n            () => {\n                this._globalListener = registerOutsideClick(this._renderer, {\n                    targets: [target, this._elementRef.nativeElement],\n                    outsideClick: this._listenOpts.outsideClick,\n                    hide: (/**\n                     * @return {?}\n                     */\n                    () => this._listenOpts.hide())\n                });\n            }));\n        }\n        if (this._listenOpts.outsideEsc) {\n            /** @type {?} */\n            const target = this._componentRef.location.nativeElement;\n            this._globalListener = registerEscClick(this._renderer, {\n                targets: [target, this._elementRef.nativeElement],\n                outsideEsc: this._listenOpts.outsideEsc,\n                hide: (/**\n                 * @return {?}\n                 */\n                () => this._listenOpts.hide())\n            });\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getInnerComponent() {\n        return this._innerComponent;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _subscribePositioning() {\n        if (this._zoneSubscription || !this.attachment) {\n            return;\n        }\n        this.onShown.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._posService.position({\n                element: this._componentRef.location,\n                target: this._elementRef,\n                attachment: this.attachment,\n                appendToBody: this.container === 'body'\n            });\n        }));\n        this._zoneSubscription = this._ngZone.onStable.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this._componentRef) {\n                return;\n            }\n            this._posService.calcPosition();\n        }));\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _unsubscribePositioning() {\n        if (!this._zoneSubscription) {\n            return;\n        }\n        this._zoneSubscription.unsubscribe();\n        this._zoneSubscription = null;\n    }\n    /**\n     * @private\n     * @param {?} content\n     * @param {?=} context\n     * @param {?=} initialState\n     * @return {?}\n     */\n    _getContentRef(\n    /* tslint:disable-next-line: no-any*/\n    content, \n    /* tslint:disable-next-line: no-any*/\n    context, \n    /* tslint:disable-next-line: no-any*/\n    initialState) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        if (content instanceof TemplateRef) {\n            if (this._viewContainerRef) {\n                /** @type {?} */\n                const _viewRef = this._viewContainerRef\n                    .createEmbeddedView(content, context);\n                _viewRef.markForCheck();\n                return new ContentRef([_viewRef.rootNodes], _viewRef);\n            }\n            /** @type {?} */\n            const viewRef = content.createEmbeddedView({});\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        if (typeof content === 'function') {\n            /** @type {?} */\n            const contentCmptFactory = this._componentFactoryResolver.resolveComponentFactory(content);\n            /** @type {?} */\n            const modalContentInjector = Injector.create({\n                providers: this._providers,\n                parent: this._injector\n            });\n            /** @type {?} */\n            const componentRef = contentCmptFactory.create(modalContentInjector);\n            Object.assign(componentRef.instance, initialState);\n            this._applicationRef.attachView(componentRef.hostView);\n            return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n        }\n        return new ContentRef([[this._renderer.createText(`${content}`)]]);\n    }\n}\nif (false) {\n    /** @type {?} */\n    ComponentLoader.prototype.onBeforeShow;\n    /** @type {?} */\n    ComponentLoader.prototype.onShown;\n    /** @type {?} */\n    ComponentLoader.prototype.onBeforeHide;\n    /** @type {?} */\n    ComponentLoader.prototype.onHidden;\n    /** @type {?} */\n    ComponentLoader.prototype.instance;\n    /** @type {?} */\n    ComponentLoader.prototype._componentRef;\n    /** @type {?} */\n    ComponentLoader.prototype._inlineViewRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._providers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._componentFactory;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._zoneSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._contentRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._innerComponent;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._unregisterListenersFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._isHiding;\n    /**\n     * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype.attachment;\n    /**\n     * A selector specifying the element the popover should be appended to.\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype.container;\n    /**\n     * A selector used if container element was not found\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype.containerDefaultSelector;\n    /**\n     * Specifies events that should trigger. Supports a space separated list of\n     * event names.\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype.triggers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._listenOpts;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._globalListener;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._renderer;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._applicationRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoader.prototype._posService;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ComponentLoaderFactory {\n    /**\n     * @param {?} _componentFactoryResolver\n     * @param {?} _ngZone\n     * @param {?} _injector\n     * @param {?} _posService\n     * @param {?} _applicationRef\n     */\n    constructor(_componentFactoryResolver, _ngZone, _injector, _posService, _applicationRef) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._ngZone = _ngZone;\n        this._injector = _injector;\n        this._posService = _posService;\n        this._applicationRef = _applicationRef;\n    }\n    /**\n     *\n     * @template T\n     * @param {?} _elementRef\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @return {?}\n     */\n    createLoader(_elementRef, _viewContainerRef, _renderer) {\n        return new ComponentLoader(_viewContainerRef, _renderer, _elementRef, this._injector, this._componentFactoryResolver, this._ngZone, this._applicationRef, this._posService);\n    }\n}\nComponentLoaderFactory.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nComponentLoaderFactory.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: NgZone },\n    { type: Injector },\n    { type: PositioningService },\n    { type: ApplicationRef }\n];\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoaderFactory.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoaderFactory.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoaderFactory.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoaderFactory.prototype._posService;\n    /**\n     * @type {?}\n     * @private\n     */\n    ComponentLoaderFactory.prototype._applicationRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { BsComponentRef, ComponentLoader, ComponentLoaderFactory, ContentRef };\n"],"mappings":"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B;EAC3C;AACJ;AACA;AACA;EACI3F,eAAe,CAACR,SAAS,CAAC8C,WAAW;EACrC;AACJ;AACA;AACA;EACItC,eAAe,CAACR,SAAS,CAAC4C,eAAe;EACzC;AACJ;AACA;AACA;EACIpC,eAAe,CAACR,SAAS,CAACoF,sBAAsB;EAChD;AACJ;AACA;AACA;EACI5E,eAAe,CAACR,SAAS,CAACsB,SAAS;EACnC;AACJ;AACA;AACA;AACA;EACId,eAAe,CAACR,SAAS,CAACqC,UAAU;EACpC;AACJ;AACA;AACA;AACA;EACI7B,eAAe,CAACR,SAAS,CAACkC,SAAS;EACnC;AACJ;AACA;AACA;AACA;EACI1B,eAAe,CAACR,SAAS,CAACuB,wBAAwB;EAClD;AACJ;AACA;AACA;AACA;AACA;EACIf,eAAe,CAACR,SAAS,CAACuF,QAAQ;EAClC;AACJ;AACA;AACA;EACI/E,eAAe,CAACR,SAAS,CAACwB,WAAW;EACrC;AACJ;AACA;AACA;EACIhB,eAAe,CAACR,SAAS,CAACyB,eAAe;EACzC;AACJ;AACA;AACA;EACIjB,eAAe,CAACR,SAAS,CAACS,iBAAiB;EAC3C;AACJ;AACA;AACA;EACID,eAAe,CAACR,SAAS,CAACU,SAAS;EACnC;AACJ;AACA;AACA;EACIF,eAAe,CAACR,SAAS,CAACW,WAAW;EACrC;AACJ;AACA;AACA;EACIH,eAAe,CAACR,SAAS,CAACY,SAAS;EACnC;AACJ;AACA;AACA;EACIJ,eAAe,CAACR,SAAS,CAACa,yBAAyB;EACnD;AACJ;AACA;AACA;EACIL,eAAe,CAACR,SAAS,CAACc,OAAO;EACjC;AACJ;AACA;AACA;EACIN,eAAe,CAACR,SAAS,CAACe,eAAe;EACzC;AACJ;AACA;AACA;EACIP,eAAe,CAACR,SAAS,CAACgB,WAAW;AACzC;;AAEA;AACA;AACA;AACA;AACA,MAAM+F,sBAAsB,CAAC;EACzB;AACJ;AACA;AACA;AACA;AACA;AACA;EACI3G,WAAWA,CAACS,yBAAyB,EAAEC,OAAO,EAAEF,SAAS,EAAEI,WAAW,EAAED,eAAe,EAAE;IACrF,IAAI,CAACF,yBAAyB,GAAGA,yBAAyB;IAC1D,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACF,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACI,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACD,eAAe,GAAGA,eAAe;EAC1C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIiG,YAAYA,CAACrG,WAAW,EAAEF,iBAAiB,EAAEC,SAAS,EAAE;IACpD,OAAO,IAAIF,eAAe,CAACC,iBAAiB,EAAEC,SAAS,EAAEC,WAAW,EAAE,IAAI,CAACC,SAAS,EAAE,IAAI,CAACC,yBAAyB,EAAE,IAAI,CAACC,OAAO,EAAE,IAAI,CAACC,eAAe,EAAE,IAAI,CAACC,WAAW,CAAC;EAC/K;AACJ;AACA+F,sBAAsB,CAACE,UAAU,GAAG,CAChC;EAAEC,IAAI,EAAE3H;AAAW,CAAC,CACvB;AACD;AACAwH,sBAAsB,CAACI,cAAc,GAAG,MAAM,CAC1C;EAAED,IAAI,EAAE1H;AAAyB,CAAC,EAClC;EAAE0H,IAAI,EAAEzH;AAAO,CAAC,EAChB;EAAEyH,IAAI,EAAE9H;AAAS,CAAC,EAClB;EAAE8H,IAAI,EAAEpH;AAAmB,CAAC,EAC5B;EAAEoH,IAAI,EAAExH;AAAe,CAAC,CAC3B;AACD,IAAI,KAAK,EAAE;EACP;AACJ;AACA;AACA;EACIqH,sBAAsB,CAAC/G,SAAS,CAACa,yBAAyB;EAC1D;AACJ;AACA;AACA;EACIkG,sBAAsB,CAAC/G,SAAS,CAACc,OAAO;EACxC;AACJ;AACA;AACA;EACIiG,sBAAsB,CAAC/G,SAAS,CAACY,SAAS;EAC1C;AACJ;AACA;AACA;EACImG,sBAAsB,CAAC/G,SAAS,CAACgB,WAAW;EAC5C;AACJ;AACA;AACA;EACI+F,sBAAsB,CAAC/G,SAAS,CAACe,eAAe;AACpD;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,SAAShB,cAAc,EAAES,eAAe,EAAEuG,sBAAsB,EAAE5G,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}