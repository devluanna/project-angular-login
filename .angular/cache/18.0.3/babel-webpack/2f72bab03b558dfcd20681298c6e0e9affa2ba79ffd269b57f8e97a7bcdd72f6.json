{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user-service\";\nimport * as i2 from \"@angular/common\";\nfunction NotificationNavbarComponent_img_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 6);\n  }\n}\nexport class NotificationNavbarComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.userSubStatus = '';\n    this.datePasswordExpire = '';\n    this.notificationMessage = '';\n    this.daysUntilPasswordExpires = null;\n    this.notificationClass = '';\n  }\n  ngOnInit() {\n    const userId = sessionStorage.getItem('userId');\n    if (userId) {\n      this.userService.getUserInfo(userId).subscribe(user => {\n        this.userSubStatus = `${user.subStatus}`;\n        this.datePasswordExpire = `${user.passwordExpirationDays}`;\n      }, error => {\n        console.error('Erro ao obter informações do usuário', error);\n      });\n    } else {\n      console.error('ID do usuário não encontrado na sessão');\n    }\n  }\n  setNotificationMessageAndClass() {\n    switch (this.userSubStatus) {\n      case 'ON_ALERT':\n        this.notificationMessage = `ON ALERT! Your password is about to expire, ${this.daysUntilPasswordExpires} days left. Please change your password manually to avoid being blocked.`;\n        this.notificationClass = 'alert-red'; // Classe para cor vermelha\n        break;\n      case 'NON_COMPLIANCE':\n        this.notificationMessage = `If you haven't changed your password manually yet, after 7 days your account will be blocked.`;\n        this.notificationClass = 'alert-orange'; // Classe para cor laranja\n        break;\n      default:\n        this.notificationMessage = 'You have no notifications.';\n        this.notificationClass = '';\n        break;\n    }\n  }\n  static #_ = this.ɵfac = function NotificationNavbarComponent_Factory(t) {\n    return new (t || NotificationNavbarComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationNavbarComponent,\n    selectors: [[\"app-notification-navbar\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"box-notifications\"], [1, \"notifications\"], [1, \"title-notifications\"], [1, \"container-notifications\"], [1, \"notification-alert\", 3, \"ngClass\"], [\"src\", \"/assets/svg/notifications/empty.svg\", 4, \"ngIf\"], [\"src\", \"/assets/svg/notifications/empty.svg\"]],\n    template: function NotificationNavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\");\n        i0.ɵɵtext(4, \"Notifications\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4);\n        i0.ɵɵtemplate(7, NotificationNavbarComponent_img_7_Template, 1, 0, \"img\", 5);\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", ctx.notificationClass);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.userSubStatus !== \"NON_COMPLIANCE\" && ctx.userSubStatus !== \"ON_ALERT\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.notificationMessage);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgIf],\n    styles: [\".notifications[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background-color: #fff;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  border-radius: 4px;\\n  top: 60px;\\n  right: 250px;\\n  width: 225px;\\n  height: 300px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-size: 0.8em;\\n  z-index: 1000;\\n  overflow: auto;\\n}\\n\\n.title-notifications[_ngcontent-%COMP%] {\\n  padding: 1em;\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 1em;\\n  text-transform: uppercase;\\n  font-weight: 500;\\n  border-bottom: 1px solid #E2E2E2;\\n}\\n\\n.notification-alert[_ngcontent-%COMP%] {\\n  justify-content: space-between;\\n  display: flex;\\n  padding: 1em;\\n  color: #fff;\\n  background-color: #E87128;\\n}\\n.notification-alert[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  padding-right: 15px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ub3RpZmljYXRpb24tbmF2YmFyL25vdGlmaWNhdGlvbi1uYXZiYXIuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vJUMzJTgxcmVhJTIwZGUlMjBUcmFiYWxoby9MdWEvcHJvamVjdC1hbmd1bGFyLWxvZ2luL3Byb2plY3QtYW5ndWxhci1sb2dpbi9zcmMvYXBwL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uLW5hdmJhci9ub3RpZmljYXRpb24tbmF2YmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0ksa0JBQUE7RUFDQSxzQkFBQTtFQUNBLHdDQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0NDSlc7RURLWCxnQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0FFRko7O0FGS0E7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0NBQUE7QUVGSjs7QUZPQTtFQUNJLDhCQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EseUJBQUE7QUVKSjtBRktJO0VBQ0ksbUJBQUE7QUVIUiIsInNvdXJjZXNDb250ZW50IjpbIkBpbXBvcnQgJ3NyYy9zdHlsZXMvdmFyaWFibGVzJztcclxuXHJcblxyXG4ubm90aWZpY2F0aW9ucyB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgIHRvcDogNjBweDtcclxuICAgIHJpZ2h0OiAyNTBweDtcclxuICAgIHdpZHRoOiAyMjVweDtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgICBmb250LWZhbWlseTogJGZvbnQtcHJpbWFyeTtcclxuICAgIGZvbnQtc2l6ZTogMC44ZW07XHJcbiAgICB6LWluZGV4OiAxMDAwO1xyXG4gICAgb3ZlcmZsb3c6YXV0bzsgXHJcbn1cclxuXHJcbi50aXRsZS1ub3RpZmljYXRpb25zIHtcclxuICAgIHBhZGRpbmc6IDFlbTtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMWVtO1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0UyRTJFMjtcclxufVxyXG5cclxuLmNvbnRhaW5lci1ub3RpZmljYXRpb25zIHt9XHJcblxyXG4ubm90aWZpY2F0aW9uLWFsZXJ0IHtcclxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBwYWRkaW5nOiAxZW07XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFODcxMjg7XHJcbiAgICBpbWcge1xyXG4gICAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7XHJcbiAgICB9XHJcbn0iLCIkcHJpbWFyeS1jb2xvcjogI0EyQTUzQjtcclxuJHNlY29uZGFyeS1jb2xvcjogIzFFMjc3MjtcclxuJHRoaXJkLWNvbG9yOiAjMkUyRTJFO1xyXG5cclxuLy9CdXR0b25zXHJcbiRidG4tcHJpbWFyeS1hcHA6I0YwRjBGMDtcclxuXHJcbi8vRm9udHNcclxuJGZvbnQtcHJpbWFyeTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XHJcbiR0ZXh0LXNpemUtcHJpbWFyeToxNXB4O1xyXG4kdGV4dC1zaXplLXNlY29uZGFyeToxM3B4O1xyXG4kdGV4dC1jb2xvci1zZWNvbmRhcnk6IzNEM0QzRDtcclxuJHRleHQtY29sb3I6ICM1NTU1NTU7XHJcbiR0ZXh0LWNvbG9yLXNpbXBsZTojOTM5MzkzO1xyXG5cclxuLy9CYWNrZ3JvdW5kc1xyXG4kZ3JheS1iZzogI0VFRUVFRTtcclxuJGdyYXktc2Vjb25kYXJ5LWJnOiAjRjFGM0Y2O1xyXG5cclxuLy9TdGF0dXNcclxuJHVuYXZhaWxhYmxlLWNvbG9yOiAjOTYyOTI5O1xyXG4kdmFpbGFibGUtY29sb3I6I0EyQTUzQjtcclxuXHJcbiIsIi5ub3RpZmljYXRpb25zIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG4gIHRvcDogNjBweDtcbiAgcmlnaHQ6IDI1MHB4O1xuICB3aWR0aDogMjI1cHg7XG4gIGhlaWdodDogMzAwcHg7XG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAwLjhlbTtcbiAgei1pbmRleDogMTAwMDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi50aXRsZS1ub3RpZmljYXRpb25zIHtcbiAgcGFkZGluZzogMWVtO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxZW07XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA1MDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTJFMkUyO1xufVxuXG4ubm90aWZpY2F0aW9uLWFsZXJ0IHtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBkaXNwbGF5OiBmbGV4O1xuICBwYWRkaW5nOiAxZW07XG4gIGNvbG9yOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTg3MTI4O1xufVxuLm5vdGlmaWNhdGlvbi1hbGVydCBpbWcge1xuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","i0","ɵɵelement","NotificationNavbarComponent","constructor","userService","userSubStatus","datePasswordExpire","notificationMessage","daysUntilPasswordExpires","notificationClass","ngOnInit","userId","sessionStorage","getItem","getUserInfo","subscribe","user","subStatus","passwordExpirationDays","error","console","setNotificationMessageAndClass","_","ɵɵdirectiveInject","i1","UserService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NotificationNavbarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","NotificationNavbarComponent_img_7_Template","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","i2","NgClass","NgIf","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\notification-navbar\\notification-navbar.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\notification-navbar\\notification-navbar.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user-service';\r\n\r\n@Component({\r\n  selector: 'app-notification-navbar',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './notification-navbar.component.html',\r\n  styleUrl: './notification-navbar.component.scss'\r\n})\r\nexport class NotificationNavbarComponent {\r\n  userSubStatus: string = '';\r\n  datePasswordExpire: string = '';\r\n  notificationMessage: string = '';\r\n  daysUntilPasswordExpires: number | null = null;\r\n  notificationClass: string = '';\r\n\r\n  constructor(\r\n    private userService: UserService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    const userId = sessionStorage.getItem('userId');\r\n  \r\n    if (userId) {\r\n      this.userService.getUserInfo(userId).subscribe(\r\n        (user) => {\r\n          this.userSubStatus =  `${user.subStatus}`;\r\n          this.datePasswordExpire =  `${user.passwordExpirationDays}`;\r\n        },\r\n        (error) => {\r\n          console.error('Erro ao obter informações do usuário', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('ID do usuário não encontrado na sessão');\r\n    }\r\n  }\r\n\r\n  private setNotificationMessageAndClass(): void {\r\n    switch (this.userSubStatus) {\r\n      case 'ON_ALERT':\r\n        this.notificationMessage = `ON ALERT! Your password is about to expire, ${this.daysUntilPasswordExpires} days left. Please change your password manually to avoid being blocked.`;\r\n        this.notificationClass = 'alert-red'; // Classe para cor vermelha\r\n        break;\r\n      case 'NON_COMPLIANCE':\r\n        this.notificationMessage = `If you haven't changed your password manually yet, after 7 days your account will be blocked.`;\r\n        this.notificationClass = 'alert-orange'; // Classe para cor laranja\r\n        break;\r\n      default:\r\n        this.notificationMessage = 'You have no notifications.';\r\n        this.notificationClass = '';\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<div class=\"box-notifications\">\r\n  <div class=\"notifications\">\r\n    <div class=\"title-notifications\">\r\n      <span>Notifications</span>\r\n    </div>\r\n\r\n    <div class=\"container-notifications\">\r\n      <div class=\"notification-alert\" [ngClass]=\"notificationClass\">\r\n        <img *ngIf=\"userSubStatus !== 'NON_COMPLIANCE' && userSubStatus !== 'ON_ALERT'\" src=\"/assets/svg/notifications/empty.svg\" />\r\n        <span>{{ notificationMessage }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}