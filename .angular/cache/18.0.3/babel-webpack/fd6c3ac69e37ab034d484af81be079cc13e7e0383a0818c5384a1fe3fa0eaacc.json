{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { DefaultLoginLayoutComponent } from '../../components/default-login-layout/default-login-layout.component';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputComponent } from '../../components/input/input.component';\nlet LoginComponent = class LoginComponent {\n  constructor(router,\n  //private loginService: LoginService,\n  toastService) {\n    this.router = router;\n    this.toastService = toastService;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  // submit(){\n  // this.loginService.login(this.loginForm.value.email, this.loginForm.value.password).subscribe({\n  //  next: () => this.toastService.success(\"Login feito com sucesso!\"),\n  //   error: () => this.toastService.error(\"Erro inesperado! Tente novamente mais tarde\")\n  // })\n  // }\n  navigate() {\n    this.router.navigate([\"signup\"]);\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [DefaultLoginLayoutComponent, ReactiveFormsModule, InputComponent],\n  providers: [\n    // LoginService\n  ],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss'\n})], LoginComponent);\nexport { LoginComponent };","map":{"version":3,"names":["Component","DefaultLoginLayoutComponent","FormControl","FormGroup","ReactiveFormsModule","Validators","InputComponent","LoginComponent","constructor","router","toastService","loginForm","email","required","password","minLength","navigate","__decorate","selector","standalone","imports","providers","templateUrl","styleUrl"],"sources":["C:\\Users\\luana\\OneDrive\\√Årea de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { DefaultLoginLayoutComponent } from '../../components/default-login-layout/default-login-layout.component';\r\nimport { FormControl, FormGroup, FormRecord, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { InputComponent } from '../../components/input/input.component';\r\nimport { Router } from '@angular/router';\r\n//import { LoginService } from '../../services/login.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\ninterface LoginForm {\r\n  email: FormControl,\r\n  password: FormControl\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [\r\n    DefaultLoginLayoutComponent,\r\n    ReactiveFormsModule,\r\n    InputComponent\r\n  ],\r\n  providers: [\r\n   // LoginService\r\n  ],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  loginForm!: FormGroup<LoginForm>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    //private loginService: LoginService,\r\n    private toastService: ToastrService\r\n  ){\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n    })\r\n  }\r\n\r\n // submit(){\r\n   // this.loginService.login(this.loginForm.value.email, this.loginForm.value.password).subscribe({\r\n    //  next: () => this.toastService.success(\"Login feito com sucesso!\"),\r\n   //   error: () => this.toastService.error(\"Erro inesperado! Tente novamente mais tarde\")\r\n   // })\r\n // }\r\n\r\n  navigate(){\r\n    this.router.navigate([\"signup\"])\r\n  }\r\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,2BAA2B,QAAQ,sEAAsE;AAClH,SAASC,WAAW,EAAEC,SAAS,EAAcC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AACpG,SAASC,cAAc,QAAQ,wCAAwC;AAwBhE,IAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YACUC,MAAc;EACtB;EACQC,YAA2B;IAF3B,KAAAD,MAAM,GAANA,MAAM;IAEN,KAAAC,YAAY,GAAZA,YAAY;IAEpB,IAAI,CAACC,SAAS,GAAG,IAAIR,SAAS,CAAC;MAC7BS,KAAK,EAAE,IAAIV,WAAW,CAAC,EAAE,EAAE,CAACG,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACO,KAAK,CAAC,CAAC;MACnEE,QAAQ,EAAE,IAAIZ,WAAW,CAAC,EAAE,EAAE,CAACG,UAAU,CAACQ,QAAQ,EAAER,UAAU,CAACU,SAAS,CAAC,CAAC,CAAC,CAAC;KAC7E,CAAC;EACJ;EAED;EACE;EACC;EACD;EACA;EACF;EAECC,QAAQA,CAAA;IACN,IAAI,CAACP,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;CACD;AAxBYT,cAAc,GAAAU,UAAA,EAd1BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPnB,2BAA2B,EAC3BG,mBAAmB,EACnBE,cAAc,CACf;EACDe,SAAS,EAAE;IACV;EAAA,CACA;EACDC,WAAW,EAAE,wBAAwB;EACrCC,QAAQ,EAAE;CACX,CAAC,C,EACWhB,cAAc,CAwB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}