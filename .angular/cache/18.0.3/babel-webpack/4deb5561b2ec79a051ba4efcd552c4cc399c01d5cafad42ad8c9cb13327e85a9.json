{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport * as moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user-service\";\nimport * as i2 from \"@angular/common\";\nfunction NotificationNavbarComponent_img_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 6);\n  }\n}\nexport class NotificationNavbarComponent {\n  constructor(userService) {\n    this.userService = userService;\n    this.userSubStatus = '';\n    this.datePasswordExpire = '';\n    this.notificationMessage = '';\n    this.daysUntilPasswordExpires = null;\n    this.notificationClass = '';\n  }\n  ngOnInit() {\n    const userId = sessionStorage.getItem('userId');\n    if (userId) {\n      this.userService.getUserInfo(userId).subscribe(user => {\n        this.userSubStatus = user.subStatus;\n        this.daysUntilPasswordExpires = moment(user.passwordExpirationDays).diff(moment(), 'days');\n        this.setNotificationMessageAndClass();\n      }, error => {\n        console.error('Erro ao obter informações do usuário', error);\n      });\n    } else {\n      console.error('ID do usuário não encontrado na sessão');\n    }\n  }\n  setNotificationMessageAndClass() {\n    switch (this.userSubStatus) {\n      case 'ON_ALERT':\n        this.notificationMessage = `ON ALERT! Your password is about to expire, ${this.daysUntilPasswordExpires} days left. Please change your password manually to avoid being blocked.`;\n        this.notificationClass = 'alert-red';\n        break;\n      case 'IN_NON_COMPLIANCE':\n        this.notificationMessage = `We verified that your password was reset via the system, on the date: ${this.daysUntilPasswordExpires}. However, you haven't changed your password manually yet, after 7 calendar days your account will be blocked.`;\n        this.notificationClass = 'alert-orange';\n        break;\n      default:\n        this.notificationMessage = 'You have no notifications.';\n        this.notificationClass = '';\n        break;\n    }\n  }\n  static #_ = this.ɵfac = function NotificationNavbarComponent_Factory(t) {\n    return new (t || NotificationNavbarComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationNavbarComponent,\n    selectors: [[\"app-notification-navbar\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 10,\n    vars: 3,\n    consts: [[1, \"box-notifications\"], [1, \"notifications\"], [1, \"title-notifications\"], [1, \"container-notifications\"], [1, \"notification-alert\", 3, \"ngClass\"], [\"src\", \"/assets/svg/notifications/on_alert.svg\", 4, \"ngIf\"], [\"src\", \"/assets/svg/notifications/on_alert.svg\"]],\n    template: function NotificationNavbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"span\");\n        i0.ɵɵtext(4, \"Notifications\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"div\", 4);\n        i0.ɵɵtemplate(7, NotificationNavbarComponent_img_7_Template, 1, 0, \"img\", 5);\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", ctx.notificationClass);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.userSubStatus !== \"NON_COMPLIANCE\" && ctx.userSubStatus !== \"ON_ALERT\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.notificationMessage);\n      }\n    },\n    dependencies: [CommonModule, i2.NgClass, i2.NgIf],\n    styles: [\".notifications[_ngcontent-%COMP%] {\\n  position: absolute;\\n  background-color: #fff;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  border-radius: 4px;\\n  top: 60px;\\n  right: 250px;\\n  width: 300px;\\n  height: 300px;\\n  font-family: \\\"Poppins\\\", sans-serif;\\n  font-size: 0.8em;\\n  z-index: 1000;\\n  overflow: auto;\\n}\\n\\n.title-notifications[_ngcontent-%COMP%] {\\n  padding: 1em;\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 1em;\\n  text-transform: uppercase;\\n  font-weight: 500;\\n  border-bottom: 1px solid #E2E2E2;\\n}\\n\\n.container-notifications[_ngcontent-%COMP%]   .notification-alert[_ngcontent-%COMP%] {\\n  padding: 1em;\\n  border-radius: 5px;\\n  margin-top: 1em;\\n  justify-content: space-between;\\n  height: 80px;\\n  display: flex;\\n  overflow: auto;\\n  margin-bottom: 2px;\\n}\\n.container-notifications[_ngcontent-%COMP%]   .notification-alert[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 34px;\\n  height: 34px;\\n  padding-right: 15px;\\n}\\n.container-notifications[_ngcontent-%COMP%]   .notification-alert.alert-red[_ngcontent-%COMP%] {\\n  background-color: #f8d7da;\\n  color: #721c24;\\n}\\n.container-notifications[_ngcontent-%COMP%]   .notification-alert.alert-orange[_ngcontent-%COMP%] {\\n  background-color: #fff3cd;\\n  color: #856404;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9ub3RpZmljYXRpb24tbmF2YmFyL25vdGlmaWNhdGlvbi1uYXZiYXIuY29tcG9uZW50LnNjc3MiLCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3ZhcmlhYmxlcy5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vLi4vLi4vJUMzJTgxcmVhJTIwZGUlMjBUcmFiYWxoby9MdWEvcHJvamVjdC1hbmd1bGFyLWxvZ2luL3Byb2plY3QtYW5ndWxhci1sb2dpbi9zcmMvYXBwL2NvbXBvbmVudHMvbm90aWZpY2F0aW9uLW5hdmJhci9ub3RpZmljYXRpb24tbmF2YmFyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUdBO0VBQ0ksa0JBQUE7RUFDQSxzQkFBQTtFQUNBLHdDQUFBO0VBQ0Esa0JBQUE7RUFDQSxTQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0Esa0NDSlc7RURLWCxnQkFBQTtFQUNBLGFBQUE7RUFDQSxjQUFBO0FFRko7O0FGS0E7RUFDSSxZQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0NBQUE7QUVGSjs7QUZNSTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtFQUNBLGVBQUE7RUFDQSw4QkFBQTtFQUNBLFlBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtFQUNBLGtCQUFBO0FFSFI7QUZLUTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0EsbUJBQUE7QUVIWjtBRk1RO0VBQ0kseUJBQUE7RUFDQSxjQUFBO0FFSlo7QUZPUTtFQUNJLHlCQUFBO0VBQ0EsY0FBQTtBRUxaIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnc3JjL3N0eWxlcy92YXJpYWJsZXMnO1xyXG5cclxuXHJcbi5ub3RpZmljYXRpb25zIHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgdG9wOiA2MHB4O1xyXG4gICAgcmlnaHQ6IDI1MHB4O1xyXG4gICAgd2lkdGg6IDMwMHB4O1xyXG4gICAgaGVpZ2h0OiAzMDBweDtcclxuICAgIGZvbnQtZmFtaWx5OiAkZm9udC1wcmltYXJ5O1xyXG4gICAgZm9udC1zaXplOiAwLjhlbTtcclxuICAgIHotaW5kZXg6IDEwMDA7XHJcbiAgICBvdmVyZmxvdzogYXV0bztcclxufVxyXG5cclxuLnRpdGxlLW5vdGlmaWNhdGlvbnMge1xyXG4gICAgcGFkZGluZzogMWVtO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxZW07XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRTJFMkUyO1xyXG59XHJcblxyXG4uY29udGFpbmVyLW5vdGlmaWNhdGlvbnMge1xyXG4gICAgLm5vdGlmaWNhdGlvbi1hbGVydCB7XHJcbiAgICAgICAgcGFkZGluZzogMWVtO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiAxZW07XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgICAgIGhlaWdodDogODBweDtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIG92ZXJmbG93OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206MnB4O1xyXG5cclxuICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMzRweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiAzNHB4O1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi5hbGVydC1yZWQge1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhkN2RhO1xyXG4gICAgICAgICAgICBjb2xvcjogIzcyMWMyNDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYuYWxlcnQtb3JhbmdlIHtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjNjZDtcclxuICAgICAgICAgICAgY29sb3I6ICM4NTY0MDQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiJHByaW1hcnktY29sb3I6ICNBMkE1M0I7XHJcbiRzZWNvbmRhcnktY29sb3I6ICMxRTI3NzI7XHJcbiR0aGlyZC1jb2xvcjogIzJFMkUyRTtcclxuXHJcbi8vQnV0dG9uc1xyXG4kYnRuLXByaW1hcnktYXBwOiNGMEYwRjA7XHJcblxyXG4vL0ZvbnRzXHJcbiRmb250LXByaW1hcnk6IFwiUG9wcGluc1wiLCBzYW5zLXNlcmlmO1xyXG4kdGV4dC1zaXplLXByaW1hcnk6MTVweDtcclxuJHRleHQtc2l6ZS1zZWNvbmRhcnk6MTNweDtcclxuJHRleHQtY29sb3Itc2Vjb25kYXJ5OiMzRDNEM0Q7XHJcbiR0ZXh0LWNvbG9yOiAjNTU1NTU1O1xyXG4kdGV4dC1jb2xvci1zaW1wbGU6IzkzOTM5MztcclxuXHJcbi8vQmFja2dyb3VuZHNcclxuJGdyYXktYmc6ICNFRUVFRUU7XHJcbiRncmF5LXNlY29uZGFyeS1iZzogI0YxRjNGNjtcclxuXHJcbi8vU3RhdHVzXHJcbiR1bmF2YWlsYWJsZS1jb2xvcjogIzk2MjkyOTtcclxuJHZhaWxhYmxlLWNvbG9yOiNBMkE1M0I7XHJcblxyXG4iLCIubm90aWZpY2F0aW9ucyB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgYm94LXNoYWRvdzogMCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xuICB0b3A6IDYwcHg7XG4gIHJpZ2h0OiAyNTBweDtcbiAgd2lkdGg6IDMwMHB4O1xuICBoZWlnaHQ6IDMwMHB4O1xuICBmb250LWZhbWlseTogXCJQb3BwaW5zXCIsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMC44ZW07XG4gIHotaW5kZXg6IDEwMDA7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4udGl0bGUtbm90aWZpY2F0aW9ucyB7XG4gIHBhZGRpbmc6IDFlbTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMWVtO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogNTAwO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0UyRTJFMjtcbn1cblxuLmNvbnRhaW5lci1ub3RpZmljYXRpb25zIC5ub3RpZmljYXRpb24tYWxlcnQge1xuICBwYWRkaW5nOiAxZW07XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgbWFyZ2luLXRvcDogMWVtO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGhlaWdodDogODBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGF1dG87XG4gIG1hcmdpbi1ib3R0b206IDJweDtcbn1cbi5jb250YWluZXItbm90aWZpY2F0aW9ucyAubm90aWZpY2F0aW9uLWFsZXJ0IGltZyB7XG4gIHdpZHRoOiAzNHB4O1xuICBoZWlnaHQ6IDM0cHg7XG4gIHBhZGRpbmctcmlnaHQ6IDE1cHg7XG59XG4uY29udGFpbmVyLW5vdGlmaWNhdGlvbnMgLm5vdGlmaWNhdGlvbi1hbGVydC5hbGVydC1yZWQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhkN2RhO1xuICBjb2xvcjogIzcyMWMyNDtcbn1cbi5jb250YWluZXItbm90aWZpY2F0aW9ucyAubm90aWZpY2F0aW9uLWFsZXJ0LmFsZXJ0LW9yYW5nZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmYzY2Q7XG4gIGNvbG9yOiAjODU2NDA0O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","moment","i0","ɵɵelement","NotificationNavbarComponent","constructor","userService","userSubStatus","datePasswordExpire","notificationMessage","daysUntilPasswordExpires","notificationClass","ngOnInit","userId","sessionStorage","getItem","getUserInfo","subscribe","user","subStatus","passwordExpirationDays","diff","setNotificationMessageAndClass","error","console","_","ɵɵdirectiveInject","i1","UserService","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NotificationNavbarComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","NotificationNavbarComponent_img_7_Template","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","i2","NgClass","NgIf","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\notification-navbar\\notification-navbar.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\notification-navbar\\notification-navbar.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user-service';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-notification-navbar',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './notification-navbar.component.html',\r\n  styleUrl: './notification-navbar.component.scss',\r\n})\r\nexport class NotificationNavbarComponent {\r\n  userSubStatus: string = '';\r\n  datePasswordExpire: string = '';\r\n  notificationMessage: string = '';\r\n  daysUntilPasswordExpires: number | null = null;\r\n  notificationClass: string = '';\r\n\r\n  constructor(private userService: UserService) {}\r\n\r\n  ngOnInit(): void {\r\n    const userId = sessionStorage.getItem('userId');\r\n\r\n    if (userId) {\r\n      this.userService.getUserInfo(userId).subscribe(\r\n        (user) => {\r\n          this.userSubStatus = user.subStatus;\r\n          this.daysUntilPasswordExpires = moment(\r\n            user.passwordExpirationDays\r\n          ).diff(moment(), 'days');\r\n\r\n          this.setNotificationMessageAndClass();\r\n        },\r\n        (error) => {\r\n          console.error('Erro ao obter informações do usuário', error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error('ID do usuário não encontrado na sessão');\r\n    }\r\n  }\r\n\r\n  private setNotificationMessageAndClass(): void {\r\n    switch (this.userSubStatus) {\r\n      case 'ON_ALERT':\r\n        this.notificationMessage = `ON ALERT! Your password is about to expire, ${this.daysUntilPasswordExpires} days left. Please change your password manually to avoid being blocked.`;\r\n        this.notificationClass = 'alert-red';\r\n        break;\r\n      case 'IN_NON_COMPLIANCE':\r\n        this.notificationMessage = `We verified that your password was reset via the system, on the date: ${this.daysUntilPasswordExpires}. However, you haven't changed your password manually yet, after 7 calendar days your account will be blocked.`;\r\n        this.notificationClass = 'alert-orange';\r\n        break;\r\n      default:\r\n        this.notificationMessage = 'You have no notifications.';\r\n        this.notificationClass = '';\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<div class=\"box-notifications\">\r\n  <div class=\"notifications\">\r\n    <div class=\"title-notifications\">\r\n      <span>Notifications</span>\r\n    </div>\r\n\r\n    <div class=\"container-notifications\">\r\n      <div class=\"notification-alert\" [ngClass]=\"notificationClass\">\r\n        <img *ngIf=\"userSubStatus !== 'NON_COMPLIANCE' && userSubStatus !== 'ON_ALERT'\" src=\"/assets/svg/notifications/on_alert.svg\" />\r\n        <span>{{ notificationMessage }}</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}