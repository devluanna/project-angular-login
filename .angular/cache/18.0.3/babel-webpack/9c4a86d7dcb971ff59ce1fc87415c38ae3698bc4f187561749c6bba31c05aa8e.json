{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {}\n  isAuthenticated() {\n    const authToken = sessionStorage.getItem('auth-token');\n    return !!authToken;\n  }\n  getUserInitials() {\n    const username = sessionStorage.getItem('username');\n    if (username) {\n      // Assume que o nome do usuário é algo como \"Primeiro Nome Último Nome\"\n      const names = username.split(' ');\n      if (names.length >= 2) {\n        return `${names[0].charAt(0)} ${names[names.length - 1].charAt(0)}`.toUpperCase();\n      } else if (names.length === 1) {\n        return `${names[0].charAt(0)}`.toUpperCase();\n      }\n    }\n    return '';\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","isAuthenticated","authToken","sessionStorage","getItem","getUserInitials","username","names","split","length","charAt","toUpperCase","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\services\\auth-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  constructor() {}\r\n\r\n  isAuthenticated(): boolean {\r\n    const authToken = sessionStorage.getItem('auth-token');\r\n    return !!authToken;\r\n  }\r\n\r\n  getUserInitials(): string {\r\n    const username = sessionStorage.getItem('username');\r\n    if (username) {\r\n      // Assume que o nome do usuário é algo como \"Primeiro Nome Último Nome\"\r\n      const names = username.split(' ');\r\n      if (names.length >= 2) {\r\n        return `${names[0].charAt(0)} ${names[names.length - 1].charAt(0)}`.toUpperCase();\r\n      } else if (names.length === 1) {\r\n        return `${names[0].charAt(0)}`.toUpperCase();\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n}"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAEtBC,YAAA,GAAe;EAEfC,eAAeA,CAAA;IACb,MAAMC,SAAS,GAAGC,cAAc,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,OAAO,CAAC,CAACF,SAAS;EACpB;EAEAG,eAAeA,CAAA;IACb,MAAMC,QAAQ,GAAGH,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC;IACnD,IAAIE,QAAQ,EAAE;MACZ;MACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC;MACjC,IAAID,KAAK,CAACE,MAAM,IAAI,CAAC,EAAE;QACrB,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC,IAAIH,KAAK,CAACA,KAAK,CAACE,MAAM,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE,CAACC,WAAW,EAAE;MACnF,CAAC,MAAM,IAAIJ,KAAK,CAACE,MAAM,KAAK,CAAC,EAAE;QAC7B,OAAO,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC,EAAE,CAACC,WAAW,EAAE;MAC9C;IACF;IACA,OAAO,EAAE;EACX;EAAC,QAAAC,CAAA,G;qBArBUb,WAAW;EAAA;EAAA,QAAAc,EAAA,G;WAAXd,WAAW;IAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}