{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  getUserById(userId) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = \"http://localhost:8080/api/user/u/\";\n  }\n  getUserInfo(userId) {\n    return this.httpClient.get(`${this.apiUrl}${userId}`).pipe();\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","getUserById","userId","Error","constructor","httpClient","apiUrl","getUserInfo","get","pipe","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\services\\user-service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginResponse } from '../../app/types/login-response.type';\r\nimport { tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  getUserById(userId: any) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n  apiUrl: string = \"http://localhost:8080/api/user/u/\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getUserInfo(userId: string) {\r\n    return this.httpClient.get<any>(`${this.apiUrl}${userId}`).pipe(\r\n     \r\n    );\r\n  }\r\n}"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EACtBC,WAAWA,CAACC,MAAW;IACrB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,MAAM,GAAW,mCAAmC;EAEN;EAE9CC,WAAWA,CAACL,MAAc;IACxB,OAAO,IAAI,CAACG,UAAU,CAACG,GAAG,CAAM,GAAG,IAAI,CAACF,MAAM,GAAGJ,MAAM,EAAE,CAAC,CAACO,IAAI,EAE9D;EACH;EAAC,QAAAC,CAAA,G;qBAZUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}