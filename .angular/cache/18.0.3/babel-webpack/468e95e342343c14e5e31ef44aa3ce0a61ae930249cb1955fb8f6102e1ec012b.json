{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputComponent } from 'src/app/components/input/input.component';\nimport { SignupLayoutComponent } from 'src/app/components/signup-layout-component/signup-layout.component';\nimport { RegisterService } from 'src/app/services/register-service';\nimport { CommonModule } from '@angular/common';\nimport { SuccessModalComponent } from 'src/app/components/success-modal/success-modal.component';\nimport { roleValidator } from 'src/app/validators/validator-role';\nlet SignupComponent = class SignupComponent {\n  constructor(router, registerService, toastService) {\n    this.router = router;\n    this.registerService = registerService;\n    this.toastService = toastService;\n    this.errorMessage = '';\n    this.isModalOpen = false;\n    this.registeredEmail = '';\n    this.signupForm = new FormGroup({\n      first_name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      last_name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      role: new FormControl('', [Validators.required, roleValidator(['ADMIN', 'USER'])])\n    });\n  }\n  submit() {\n    this.registerService.register(this.signupForm.value.first_name, this.signupForm.value.last_name, this.signupForm.value.email, this.signupForm.value.role).subscribe({\n      next: () => {\n        this.isModalOpen = true;\n        this.registeredEmail = this.signupForm.value.email;\n        this.router.navigate(['signup']);\n      },\n      error: err => {\n        if (err.status === 500) {\n          this.errorMessage = 'Email already exists!';\n          this.signupForm.controls['email'].setErrors({\n            emailExists: true\n          });\n        } else if (err.status === 500) {\n          this.errorMessage = 'This role does not exist, please try ADMIN or USER!';\n          this.signupForm.controls['role'].setErrors({\n            invalidRole: true\n          });\n        } else {\n          this.toastService.error('Unexpected error! Try again later');\n        }\n      }\n    });\n  }\n  closeModal() {\n    this.isModalOpen = false;\n    this.signupForm.reset();\n    window.location.reload();\n  }\n  navigate() {\n    this.router.navigate(['login']);\n  }\n};\nSignupComponent = __decorate([Component({\n  selector: 'app-signup',\n  standalone: true,\n  imports: [SignupLayoutComponent, SuccessModalComponent, ReactiveFormsModule, InputComponent, CommonModule],\n  providers: [RegisterService],\n  templateUrl: './signup.component.html',\n  styleUrl: './signup.component.scss'\n})], SignupComponent);\nexport { SignupComponent };","map":{"version":3,"names":["Component","FormControl","FormGroup","ReactiveFormsModule","Validators","InputComponent","SignupLayoutComponent","RegisterService","CommonModule","SuccessModalComponent","roleValidator","SignupComponent","constructor","router","registerService","toastService","errorMessage","isModalOpen","registeredEmail","signupForm","first_name","required","minLength","last_name","email","role","submit","register","value","subscribe","next","navigate","error","err","status","controls","setErrors","emailExists","invalidRole","closeModal","reset","window","location","reload","__decorate","selector","standalone","imports","providers","templateUrl","styleUrl"],"sources":["C:\\Users\\luana\\OneDrive\\√Årea de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\signup\\signup.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { InputComponent } from 'src/app/components/input/input.component';\r\nimport { SignupLayoutComponent } from 'src/app/components/signup-layout-component/signup-layout.component';\r\nimport { RegisterService } from 'src/app/services/register-service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SuccessModalComponent } from 'src/app/components/success-modal/success-modal.component';\r\nimport { roleValidator } from 'src/app/validators/validator-role';\r\n\r\ninterface SignupForm {\r\n  first_name: FormControl;\r\n  last_name: FormControl;\r\n  email: FormControl;\r\n  role: FormControl;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  standalone: true,\r\n  imports: [\r\n    SignupLayoutComponent,\r\n    SuccessModalComponent,\r\n    ReactiveFormsModule,\r\n    InputComponent,\r\n    CommonModule,\r\n  ],\r\n  providers: [RegisterService],\r\n  templateUrl: './signup.component.html',\r\n  styleUrl: './signup.component.scss',\r\n})\r\nexport class SignupComponent {\r\n  signupForm!: FormGroup<SignupForm>;\r\n  errorMessage: string = '';\r\n  isModalOpen: boolean = false;\r\n  registeredEmail: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private registerService: RegisterService,\r\n    private toastService: ToastrService\r\n  ) {\r\n    this.signupForm = new FormGroup({\r\n      first_name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n      ]),\r\n      last_name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(3),\r\n      ]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: new FormControl('', [\r\n        Validators.required,\r\n        roleValidator(['ADMIN', 'USER']),\r\n      ]),\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.registerService\r\n      .register(\r\n        this.signupForm.value.first_name,\r\n        this.signupForm.value.last_name,\r\n        this.signupForm.value.email,\r\n        this.signupForm.value.role\r\n      )\r\n      .subscribe({\r\n        next: () => {\r\n          this.isModalOpen = true;\r\n          this.registeredEmail = this.signupForm.value.email;\r\n          this.router.navigate(['signup']);\r\n        },\r\n        error: (err) => {\r\n          if (err.status === 500) {\r\n            this.errorMessage = 'Email already exists!';\r\n            this.signupForm.controls['email'].setErrors({ emailExists: true });\r\n          } else if (err.status === 500) {\r\n            this.errorMessage = 'This role does not exist, please try ADMIN or USER!';\r\n            this.signupForm.controls['role'].setErrors({ invalidRole: true });\r\n          } else {\r\n            this.toastService.error('Unexpected error! Try again later');\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  closeModal() {\r\n    this.isModalOpen = false;\r\n    this.signupForm.reset(); \r\n    window.location.reload();\r\n  }\r\n\r\n  navigate() {\r\n    this.router.navigate(['login']);\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}