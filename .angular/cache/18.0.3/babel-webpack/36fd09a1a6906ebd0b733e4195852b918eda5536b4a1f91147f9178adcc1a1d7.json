{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth-service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(_next, state) {\n    const isAuthenticated = this.authService.isAuthenticated();\n    if (isAuthenticated) {\n      return true;\n    } else {\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n      return false;\n    }\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","_next","state","isAuthenticated","navigate","queryParams","returnUrl","url","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\services\\AuthGuard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth-service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    _next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n\r\n    if (isAuthenticated) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AASA,OAAM,MAAOA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAY;EAExEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAC1B,MAAMC,eAAe,GAAG,IAAI,CAACL,WAAW,CAACK,eAAe,EAAE;IAE1D,IAAIA,eAAe,EAAE;MACnB,OAAO,IAAI;IACb,CAAC,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAAEC,WAAW,EAAE;UAAEC,SAAS,EAAEJ,KAAK,CAACK;QAAG;MAAE,CAAE,CAAC;MAC3E,OAAO,KAAK;IACd;EACF;EAAC,QAAAC,CAAA,G;qBAfUZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATnB,SAAS;IAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;IAAAC,UAAA,EAFR;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}