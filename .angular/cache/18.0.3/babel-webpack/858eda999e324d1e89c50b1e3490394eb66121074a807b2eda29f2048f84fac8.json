{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n  }\n  login(name, password) {\n    return this.httpClient.post(\"/login\", {\n      name,\n      password\n    }).pipe(tap(value => {\n      sessionStorage.setItem(\"auth-token\", value.token);\n      sessionStorage.setItem(\"username\", value.name);\n    }));\n  }\n  static #_ = this.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","LoginService","constructor","httpClient","login","name","password","post","pipe","value","sessionStorage","setItem","token","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\services\\login-service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginResponse } from '../../app/types/login-response.type';\r\nimport { tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  login(name: string, password: string){\r\n    return this.httpClient.post<LoginResponse>(\"/login\", { name, password }).pipe(\r\n      tap((value) => {\r\n        sessionStorage.setItem(\"auth-token\", value.token)\r\n        sessionStorage.setItem(\"username\", value.name)\r\n      })\r\n    )\r\n  }\r\n}"],"mappings":"AAGA,SAASA,GAAG,QAAQ,MAAM;;;AAK1B,OAAM,MAAOC,YAAY;EAEvBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAgB;EAE9CC,KAAKA,CAACC,IAAY,EAAEC,QAAgB;IAClC,OAAO,IAAI,CAACH,UAAU,CAACI,IAAI,CAAgB,QAAQ,EAAE;MAAEF,IAAI;MAAEC;IAAQ,CAAE,CAAC,CAACE,IAAI,CAC3ER,GAAG,CAAES,KAAK,IAAI;MACZC,cAAc,CAACC,OAAO,CAAC,YAAY,EAAEF,KAAK,CAACG,KAAK,CAAC;MACjDF,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEF,KAAK,CAACJ,IAAI,CAAC;IAChD,CAAC,CAAC,CACH;EACH;EAAC,QAAAQ,CAAA,G;qBAXUZ,YAAY,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZjB,YAAY;IAAAkB,OAAA,EAAZlB,YAAY,CAAAmB,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}