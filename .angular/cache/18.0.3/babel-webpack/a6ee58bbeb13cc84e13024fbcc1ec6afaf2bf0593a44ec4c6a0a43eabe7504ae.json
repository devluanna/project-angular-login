{"ast":null,"code":"import { tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class RegisterService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.apiUrl = \"http://localhost:8080/api/user\";\n  }\n  register(first_name, last_name, email, role) {\n    return this.httpClient.post(`${this.apiUrl}/register`, {\n      first_name,\n      last_name,\n      email,\n      role\n    }).pipe(tap(response => {\n      console.log(\"Request made successfully!\");\n    }));\n  }\n  static #_ = this.ɵfac = function RegisterService_Factory(t) {\n    return new (t || RegisterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RegisterService,\n    factory: RegisterService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["tap","RegisterService","constructor","httpClient","apiUrl","register","first_name","last_name","email","role","post","pipe","response","console","log","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\services\\register-service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { tap } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RegisterService {\r\n  apiUrl: string = \"http://localhost:8080/api/user\";\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  register(first_name: string, last_name: string, email: string, role:string){\r\n    return this.httpClient.post<any>(`${this.apiUrl}/register`, { first_name, last_name, email, role }).pipe(\r\n      tap((response) => {\r\n        console.log(\"Request made successfully!\");\r\n      })\r\n    );\r\n  }\r\n}"],"mappings":"AAEA,SAASA,GAAG,QAAQ,MAAM;;;AAK1B,OAAM,MAAOC,eAAe;EAG1BC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAF9B,KAAAC,MAAM,GAAW,gCAAgC;EAEH;EAE9CC,QAAQA,CAACC,UAAkB,EAAEC,SAAiB,EAAEC,KAAa,EAAEC,IAAW;IACxE,OAAO,IAAI,CAACN,UAAU,CAACO,IAAI,CAAM,GAAG,IAAI,CAACN,MAAM,WAAW,EAAE;MAAEE,UAAU;MAAEC,SAAS;MAAEC,KAAK;MAAEC;IAAI,CAAE,CAAC,CAACE,IAAI,CACtGX,GAAG,CAAEY,QAAQ,IAAI;MACfC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC,CACH;EACH;EAAC,QAAAC,CAAA,G;qBAXUd,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfnB,eAAe;IAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;IAAAC,UAAA,EAFd;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}