{"ast":null,"code":"import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { InputComponent } from 'src/app/components/input/input.component';\nimport { SignupLayoutComponent } from 'src/app/components/signup-layout-component/signup-layout.component';\nimport { RegisterService } from 'src/app/services/register-service';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/register-service\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/forms\";\nexport class SignupComponent {\n  constructor(router, registerService, toastService) {\n    this.router = router;\n    this.registerService = registerService;\n    this.toastService = toastService;\n    this.errorMessage = '';\n    this.signupForm = new FormGroup({\n      first_name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      last_name: new FormControl('', [Validators.required, Validators.minLength(3)]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      role: new FormControl('', [Validators.required, Validators.minLength(4)])\n    });\n  }\n  submit() {\n    this.registerService.register(this.signupForm.value.first_name, this.signupForm.value.last_name, this.signupForm.value.email, this.signupForm.value.role).subscribe({\n      next: () => {\n        this.toastService.success(\"Registration completed successfully!\");\n        this.router.navigate(['signup']);\n      },\n      error: err => {\n        if (err.status === 500) {\n          this.errorMessage = \"Email already exists!\";\n          this.signupForm.controls['email'].setErrors({\n            'emailExists': true\n          });\n          console.log(\"errorMessage\");\n        } else {\n          this.toastService.error(\"Unexpected error! Try again later\");\n        }\n      }\n    });\n  }\n  navigate() {\n    this.router.navigate([\"login\"]);\n  }\n  static #_ = this.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.RegisterService), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([RegisterService]), i0.ɵɵStandaloneFeature],\n    decls: 11,\n    vars: 3,\n    consts: [[\"title\", \"Sign up to our system!\", \"primaryBtnText\", \"Sign up\", \"secondaryBtnText\", \"Back and Sign in\", 3, \"submit\", \"navigate\", \"disablePrimaryBtn\"], [3, \"formGroup\"], [\"formControlName\", \"first_name\", \"inputName\", \"firstNname\", \"type\", \"text\", \"label\", \"First Name\", \"placeholder\", \"Bonequinha\"], [\"src\", \"/assets/svg/signup-input/username-signup.svg\"], [\"formControlName\", \"last_name\", \"inputName\", \"lastName\", \"type\", \"text\", \"label\", \"Last Name\", \"placeholder\", \"Cinza\"], [\"formControlName\", \"email\", \"inputName\", \"email\", \"type\", \"email\", \"label\", \"Email\", \"placeholder\", \"bonequinhacinza@peoplehub.com\", \"errorMessage\", \"Email already exists!\", 3, \"hasError\"], [\"src\", \"/assets/svg/signup-input/mail.svg\"], [\"formControlName\", \"role\", \"inputName\", \"role\", \"type\", \"text\", \"label\", \"Role\", \"placeholder\", \"ADMIN or USER\"], [\"src\", \"/assets/svg/signup-input/role.svg\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-signup-layout\", 0);\n        i0.ɵɵlistener(\"submit\", function SignupComponent_Template_app_signup_layout_submit_0_listener() {\n          return ctx.submit();\n        })(\"navigate\", function SignupComponent_Template_app_signup_layout_navigate_0_listener() {\n          return ctx.navigate();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"app-input\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"app-input\", 4);\n        i0.ɵɵelement(5, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"app-input\", 5);\n        i0.ɵɵelement(7, \"img\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"app-input\", 7);\n        i0.ɵɵelement(9, \"img\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"span\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disablePrimaryBtn\", !ctx.signupForm.valid);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hasError\", ctx.signupForm.controls[\"email\"].hasError(\"emailExists\"));\n      }\n    },\n    dependencies: [SignupLayoutComponent, ReactiveFormsModule, i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, InputComponent, CommonModule],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","ReactiveFormsModule","Validators","InputComponent","SignupLayoutComponent","RegisterService","CommonModule","SignupComponent","constructor","router","registerService","toastService","errorMessage","signupForm","first_name","required","minLength","last_name","email","role","submit","register","value","subscribe","next","success","navigate","error","err","status","controls","setErrors","console","log","_","i0","ɵɵdirectiveInject","i1","Router","i2","i3","ToastrService","_2","selectors","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","SignupComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","SignupComponent_Template_app_signup_layout_submit_0_listener","SignupComponent_Template_app_signup_layout_navigate_0_listener","ɵɵelement","ɵɵelementEnd","ɵɵproperty","valid","ɵɵadvance","hasError","i4","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\signup\\signup.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\signup\\signup.component.html"],"sourcesContent":["import { Component} from '@angular/core';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { InputComponent } from 'src/app/components/input/input.component';\r\nimport { SignupLayoutComponent } from 'src/app/components/signup-layout-component/signup-layout.component';\r\nimport { RegisterService } from 'src/app/services/register-service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsModalService, BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\ninterface SignupForm {\r\n  first_name: FormControl,\r\n  last_name: FormControl,\r\n  email: FormControl,\r\n  role: FormControl,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  standalone: true,\r\n  imports: [\r\n    SignupLayoutComponent, ReactiveFormsModule, InputComponent, CommonModule\r\n  ],\r\n  providers:[\r\n    RegisterService\r\n  ],\r\n templateUrl: './signup.component.html',\r\n  styleUrl: './signup.component.scss'\r\n})\r\nexport class SignupComponent {\r\n  modalRef!: BsModalRef; \r\n  signupForm!: FormGroup<SignupForm>;\r\n  errorMessage: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private registerService: RegisterService,\r\n    private toastService: ToastrService\r\n  ){\r\n    this.signupForm = new FormGroup({\r\n      first_name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n      last_name: new FormControl('', [Validators.required, Validators.minLength(3)]),\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      role: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n    })\r\n  }\r\n\r\n  submit() {\r\n    this.registerService.register(\r\n      this.signupForm.value.first_name,\r\n      this.signupForm.value.last_name,\r\n      this.signupForm.value.email,\r\n      this.signupForm.value.role\r\n    ).subscribe({\r\n      next: () => {\r\n        this.toastService.success(\"Registration completed successfully!\");\r\n        this.router.navigate(['signup']);\r\n      },\r\n      error: (err) => {\r\n        if (err.status === 500) { \r\n          this.errorMessage = \"Email already exists!\";\r\n          this.signupForm.controls['email'].setErrors({ 'emailExists': true });\r\n          console.log(\"errorMessage\")\r\n        } else {\r\n          this.toastService.error(\"Unexpected error! Try again later\");\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  navigate(){\r\n    this.router.navigate([\"login\"])\r\n  }\r\n\r\n}","<app-signup-layout\r\n  title=\"Sign up to our system!\"\r\n  primaryBtnText=\"Sign up\"\r\n  secondaryBtnText=\"Back and Sign in\"\r\n  (submit)=\"submit()\"\r\n  (navigate)=\"navigate()\"\r\n  [disablePrimaryBtn]=\"!signupForm.valid\"\r\n>\r\n  <form [formGroup]=\"signupForm\">\r\n    <app-input\r\n      formControlName=\"first_name\"\r\n      inputName=\"firstNname\"\r\n      type=\"text\"\r\n      label=\"First Name\"\r\n      placeholder=\"Bonequinha\"\r\n    >\r\n      <img src=\"/assets/svg/signup-input/username-signup.svg\" />\r\n    </app-input>\r\n    <app-input\r\n      formControlName=\"last_name\"\r\n      inputName=\"lastName\"\r\n      type=\"text\"\r\n      label=\"Last Name\"\r\n      placeholder=\"Cinza\"\r\n    >\r\n    <img src=\"/assets/svg/signup-input/username-signup.svg\" />\r\n    </app-input>\r\n    <app-input\r\n      formControlName=\"email\"\r\n      inputName=\"email\"\r\n      type=\"email\"\r\n      label=\"Email\"\r\n      placeholder=\"bonequinhacinza@peoplehub.com\"\r\n      [hasError]=\"signupForm.controls['email'].hasError('emailExists')\"\r\n      errorMessage=\"Email already exists!\"\r\n    >\r\n      <img src=\"/assets/svg/signup-input/mail.svg\" />\r\n    </app-input>\r\n    <app-input\r\n    formControlName=\"role\"\r\n    inputName=\"role\"\r\n    type=\"text\"\r\n    label=\"Role\"\r\n    placeholder=\"ADMIN or USER\"\r\n  >\r\n    <img src=\"/assets/svg/signup-input/role.svg\" />\r\n  </app-input>\r\n\r\n    <span></span>\r\n  </form>\r\n</app-signup-layout>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}