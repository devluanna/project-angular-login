{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { InputComponent } from '../input/input.component';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { RecoveryPasswordService } from 'src/app/services/recovery-password';\nimport { ModalDefaultComponent } from '../modal-default/modal-default.component';\nlet ModalRecoveryPasswordComponent = class ModalRecoveryPasswordComponent {\n  constructor(router, recoveryPasswordService, toastService) {\n    this.router = router;\n    this.recoveryPasswordService = recoveryPasswordService;\n    this.toastService = toastService;\n    this.disablePrimaryBtn = true;\n    this.registeredEmail = '';\n    this.isOpen = false;\n    this.closeModal = new EventEmitter();\n    this.onSubmit = new EventEmitter();\n    this.recoveryPasswordForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email])\n    });\n  }\n  submit() {\n    this.recoveryPasswordService.recoveryPassword(this.recoveryPasswordForm.value.email).subscribe({\n      next: () => {\n        this.toastService.success(\"Email successfully sent!!\");\n        //this.router.navigate(['user']);\n      },\n      error: () => this.toastService.error(\"Unexpected error! Try again later\")\n    });\n  }\n  onClose() {\n    this.closeModal.emit();\n  }\n};\n__decorate([Input()], ModalRecoveryPasswordComponent.prototype, \"disablePrimaryBtn\", void 0);\n__decorate([Input()], ModalRecoveryPasswordComponent.prototype, \"registeredEmail\", void 0);\n__decorate([Input()], ModalRecoveryPasswordComponent.prototype, \"isOpen\", void 0);\n__decorate([Output()], ModalRecoveryPasswordComponent.prototype, \"closeModal\", void 0);\n__decorate([Output(\"submit\")], ModalRecoveryPasswordComponent.prototype, \"onSubmit\", void 0);\nModalRecoveryPasswordComponent = __decorate([Component({\n  selector: 'app-modal-recovery-password',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, InputComponent, ModalDefaultComponent],\n  providers: [RecoveryPasswordService],\n  templateUrl: './modal-recovery-password.component.html',\n  styleUrl: './modal-recovery-password.component.scss'\n})], ModalRecoveryPasswordComponent);\nexport { ModalRecoveryPasswordComponent };","map":{"version":3,"names":["CommonModule","Component","Input","EventEmitter","Output","InputComponent","FormControl","FormGroup","ReactiveFormsModule","Validators","RecoveryPasswordService","ModalDefaultComponent","ModalRecoveryPasswordComponent","constructor","router","recoveryPasswordService","toastService","disablePrimaryBtn","registeredEmail","isOpen","closeModal","onSubmit","recoveryPasswordForm","email","required","submit","recoveryPassword","value","subscribe","next","success","error","onClose","emit","__decorate","selector","standalone","imports","providers","templateUrl","styleUrl"],"sources":["C:\\Users\\luana\\OneDrive\\√Årea de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\components\\modal-recovery-password\\modal-recovery-password.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { Component, Input, EventEmitter, Output  } from '@angular/core';\r\nimport { InputComponent } from '../input/input.component';\r\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { RecoveryPasswordService } from 'src/app/services/recovery-password';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\nimport { ModalDefaultComponent } from '../modal-default/modal-default.component';\r\n\r\ninterface RecoveryPasswordForm {\r\n  email: FormControl,\r\n}\r\n\r\n@Component({\r\n  selector: 'app-modal-recovery-password',\r\n  standalone: true,\r\n  imports: [CommonModule, ReactiveFormsModule, InputComponent, ModalDefaultComponent],\r\n  providers:[\r\n    RecoveryPasswordService\r\n  ],\r\n  templateUrl: './modal-recovery-password.component.html',\r\n  styleUrl: './modal-recovery-password.component.scss'\r\n})\r\nexport class ModalRecoveryPasswordComponent {\r\n  recoveryPasswordForm!: FormGroup<RecoveryPasswordForm>;\r\n\r\n  @Input() disablePrimaryBtn: boolean = true;\r\n\r\n  @Input() registeredEmail: string = '';\r\n  @Input() isOpen: boolean = false;\r\n  @Output() closeModal = new EventEmitter<void>();\r\n  @Output(\"submit\") onSubmit = new EventEmitter();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private recoveryPasswordService: RecoveryPasswordService,\r\n    private toastService: ToastrService\r\n  ) {\r\n    this.recoveryPasswordForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n    });\r\n  }\r\n\r\n  submit(){\r\n    this.recoveryPasswordService\r\n      .recoveryPassword(this.recoveryPasswordForm.value.email).subscribe({\r\n      next: () => {\r\n        this.toastService.success(\"Email successfully sent!!\");\r\n        //this.router.navigate(['user']);\r\n      },\r\n      error: () => this.toastService.error(\"Unexpected error! Try again later\")\r\n    })\r\n  }\r\n\r\n\r\n  onClose() {\r\n    this.closeModal.emit();\r\n  }\r\n\r\n}\r\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,KAAK,EAAEC,YAAY,EAAEC,MAAM,QAAS,eAAe;AACvE,SAASC,cAAc,QAAQ,0BAA0B;AACzD,SAASC,WAAW,EAAEC,SAAS,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAGxF,SAASC,uBAAuB,QAAQ,oCAAoC;AAG5E,SAASC,qBAAqB,QAAQ,0CAA0C;AAgBzE,IAAMC,8BAA8B,GAApC,MAAMA,8BAA8B;EAUzCC,YACUC,MAAc,EACdC,uBAAgD,EAChDC,YAA2B;IAF3B,KAAAF,MAAM,GAANA,MAAM;IACN,KAAAC,uBAAuB,GAAvBA,uBAAuB;IACvB,KAAAC,YAAY,GAAZA,YAAY;IAVb,KAAAC,iBAAiB,GAAY,IAAI;IAEjC,KAAAC,eAAe,GAAW,EAAE;IAC5B,KAAAC,MAAM,GAAY,KAAK;IACtB,KAAAC,UAAU,GAAG,IAAIjB,YAAY,EAAQ;IAC7B,KAAAkB,QAAQ,GAAG,IAAIlB,YAAY,EAAE;IAO7C,IAAI,CAACmB,oBAAoB,GAAG,IAAIf,SAAS,CAAC;MACxCgB,KAAK,EAAE,IAAIjB,WAAW,CAAC,EAAE,EAAE,CAACG,UAAU,CAACe,QAAQ,EAAEf,UAAU,CAACc,KAAK,CAAC;KACnE,CAAC;EACJ;EAEAE,MAAMA,CAAA;IACJ,IAAI,CAACV,uBAAuB,CACzBW,gBAAgB,CAAC,IAAI,CAACJ,oBAAoB,CAACK,KAAK,CAACJ,KAAK,CAAC,CAACK,SAAS,CAAC;MACnEC,IAAI,EAAEA,CAAA,KAAK;QACT,IAAI,CAACb,YAAY,CAACc,OAAO,CAAC,2BAA2B,CAAC;QACtD;MACF,CAAC;MACDC,KAAK,EAAEA,CAAA,KAAM,IAAI,CAACf,YAAY,CAACe,KAAK,CAAC,mCAAmC;KACzE,CAAC;EACJ;EAGAC,OAAOA,CAAA;IACL,IAAI,CAACZ,UAAU,CAACa,IAAI,EAAE;EACxB;CAED;AAjCUC,UAAA,EAARhC,KAAK,EAAE,C,wEAAmC;AAElCgC,UAAA,EAARhC,KAAK,EAAE,C,sEAA8B;AAC7BgC,UAAA,EAARhC,KAAK,EAAE,C,6DAAyB;AACvBgC,UAAA,EAAT9B,MAAM,EAAE,C,iEAAuC;AAC9B8B,UAAA,EAAjB9B,MAAM,CAAC,QAAQ,CAAC,C,+DAA+B;AARrCQ,8BAA8B,GAAAsB,UAAA,EAV1CjC,SAAS,CAAC;EACTkC,QAAQ,EAAE,6BAA6B;EACvCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAACrC,YAAY,EAAEQ,mBAAmB,EAAEH,cAAc,EAAEM,qBAAqB,CAAC;EACnF2B,SAAS,EAAC,CACR5B,uBAAuB,CACxB;EACD6B,WAAW,EAAE,0CAA0C;EACvDC,QAAQ,EAAE;CACX,CAAC,C,EACW5B,8BAA8B,CAoC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}