{"ast":null,"code":"import { DefaultLoginLayoutComponent } from '../../components/default-login-layout/default-login-layout.component';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(router,\n  //private loginService: LoginService,\n  toastService) {\n    this.router = router;\n    this.toastService = toastService;\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\n    });\n  }\n  // submit(){\n  // this.loginService.login(this.loginForm.value.email, this.loginForm.value.password).subscribe({\n  //  next: () => this.toastService.success(\"Login feito com sucesso!\"),\n  //   error: () => this.toastService.error(\"Erro inesperado! Tente novamente mais tarde\")\n  // })\n  // }\n  navigate() {\n    this.router.navigate([\"signup\"]);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    standalone: true,\n    features: [i0.ɵɵProvidersFeature([\n      // LoginService\n    ]), i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 2,\n    consts: [[\"title\", \"Login into your account\", \"primaryBtnText\", \"Login Now\", \"secondaryBtnText\", \"Signup Now\", 3, \"submit\", \"navigate\", \"disablePrimaryBtn\"], [3, \"formGroup\"], [\"formControlName\", \"email\", \"inputName\", \"email\", \"type\", \"email\", \"label\", \"Email\", \"placeholder\", \"johndoe@gmail.com\"], [\"src\", \"/assets/svg/email-icon.svg\"], [\"formControlName\", \"password\", \"inputName\", \"password\", \"type\", \"password\", \"label\", \"Your Password\"], [\"src\", \"/assets/svg/password-icon.svg\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-default-login-layout\", 0);\n        i0.ɵɵlistener(\"submit\", function LoginComponent_Template_app_default_login_layout_submit_0_listener() {\n          return ctx.submit();\n        })(\"navigate\", function LoginComponent_Template_app_default_login_layout_navigate_0_listener() {\n          return ctx.navigate();\n        });\n        i0.ɵɵelementStart(1, \"form\", 1)(2, \"app-primary-input\", 2);\n        i0.ɵɵelement(3, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"app-primary-input\", 4);\n        i0.ɵɵelement(5, \"img\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7, \"Forgot password?\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"disablePrimaryBtn\", !ctx.loginForm.valid);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      }\n    },\n    dependencies: [DefaultLoginLayoutComponent, ReactiveFormsModule, i3.ɵNgNoValidate, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["DefaultLoginLayoutComponent","FormControl","FormGroup","ReactiveFormsModule","Validators","LoginComponent","constructor","router","toastService","loginForm","email","required","password","minLength","navigate","_","i0","ɵɵdirectiveInject","i1","Router","i2","ToastrService","_2","selectors","standalone","features","ɵɵProvidersFeature","ɵɵStandaloneFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_app_default_login_layout_submit_0_listener","submit","LoginComponent_Template_app_default_login_layout_navigate_0_listener","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty","valid","ɵɵadvance","i3","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","styles"],"sources":["C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\login\\login.component.ts","C:\\Users\\luana\\OneDrive\\Área de Trabalho\\Lua\\project-angular-login\\project-angular-login\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { DefaultLoginLayoutComponent } from '../../components/default-login-layout/default-login-layout.component';\r\nimport { FormControl, FormGroup, FormRecord, ReactiveFormsModule, Validators } from '@angular/forms';\r\nimport { InputComponent } from '../../components/input/input.component';\r\nimport { Router } from '@angular/router';\r\n//import { LoginService } from '../../services/login.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\ninterface LoginForm {\r\n  email: FormControl,\r\n  password: FormControl\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  standalone: true,\r\n  imports: [\r\n    DefaultLoginLayoutComponent,\r\n    ReactiveFormsModule,\r\n    InputComponent\r\n  ],\r\n  providers: [\r\n   // LoginService\r\n  ],\r\n  templateUrl: './login.component.html',\r\n  styleUrl: './login.component.scss'\r\n})\r\nexport class LoginComponent {\r\n  loginForm!: FormGroup<LoginForm>;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    //private loginService: LoginService,\r\n    private toastService: ToastrService\r\n  ){\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, Validators.email]),\r\n      password: new FormControl('', [Validators.required, Validators.minLength(6)])\r\n    })\r\n  }\r\n\r\n // submit(){\r\n   // this.loginService.login(this.loginForm.value.email, this.loginForm.value.password).subscribe({\r\n    //  next: () => this.toastService.success(\"Login feito com sucesso!\"),\r\n   //   error: () => this.toastService.error(\"Erro inesperado! Tente novamente mais tarde\")\r\n   // })\r\n // }\r\n\r\n  navigate(){\r\n    this.router.navigate([\"signup\"])\r\n  }\r\n}","<app-default-login-layout\r\n    title=\"Login into your account\"\r\n    primaryBtnText=\"Login Now\"\r\n    secondaryBtnText=\"Signup Now\"\r\n    (submit)=\"submit()\"\r\n    (navigate)=\"navigate()\"\r\n    [disablePrimaryBtn]=\"!loginForm.valid\"\r\n>\r\n    <form [formGroup]=\"loginForm\">\r\n        <app-primary-input\r\n            formControlName=\"email\"\r\n            inputName=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            placeholder=\"johndoe@gmail.com\"\r\n        >\r\n            <img src=\"/assets/svg/email-icon.svg\"/>\r\n        </app-primary-input>\r\n        <app-primary-input\r\n            formControlName=\"password\"\r\n            inputName=\"password\"\r\n            type=\"password\"\r\n            label=\"Your Password\"\r\n        >\r\n        <img src=\"/assets/svg/password-icon.svg\"/>\r\n    </app-primary-input>\r\n    <span>Forgot password?</span>\r\n    </form>\r\n</app-default-login-layout>"],"mappings":"AACA,SAASA,2BAA2B,QAAQ,sEAAsE;AAClH,SAASC,WAAW,EAAEC,SAAS,EAAcC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;;;;;AAyBpG,OAAM,MAAOC,cAAc;EAGzBC,YACUC,MAAc;EACtB;EACQC,YAA2B;IAF3B,KAAAD,MAAM,GAANA,MAAM;IAEN,KAAAC,YAAY,GAAZA,YAAY;IAEpB,IAAI,CAACC,SAAS,GAAG,IAAIP,SAAS,CAAC;MAC7BQ,KAAK,EAAE,IAAIT,WAAW,CAAC,EAAE,EAAE,CAACG,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACM,KAAK,CAAC,CAAC;MACnEE,QAAQ,EAAE,IAAIX,WAAW,CAAC,EAAE,EAAE,CAACG,UAAU,CAACO,QAAQ,EAAEP,UAAU,CAACS,SAAS,CAAC,CAAC,CAAC,CAAC;KAC7E,CAAC;EACJ;EAED;EACE;EACC;EACD;EACA;EACF;EAECC,QAAQA,CAAA;IACN,IAAI,CAACP,MAAM,CAACO,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAAC,QAAAC,CAAA,G;qBAvBUV,cAAc,EAAAW,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdjB,cAAc;IAAAkB,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAT,EAAA,CAAAU,kBAAA,CANd;MACV;IAAA,CACA,GAAAV,EAAA,CAAAW,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCvBHjB,EAAA,CAAAmB,cAAA,kCAOC;QAFGnB,EADA,CAAAoB,UAAA,oBAAAC,mEAAA;UAAA,OAAUH,GAAA,CAAAI,MAAA,EAAQ;QAAA,EAAC,sBAAAC,qEAAA;UAAA,OACPL,GAAA,CAAApB,QAAA,EAAU;QAAA,EAAC;QAInBE,EADJ,CAAAmB,cAAA,cAA8B,2BAOzB;QACGnB,EAAA,CAAAwB,SAAA,aAAuC;QAC3CxB,EAAA,CAAAyB,YAAA,EAAoB;QACpBzB,EAAA,CAAAmB,cAAA,2BAKC;QACDnB,EAAA,CAAAwB,SAAA,aAA0C;QAC9CxB,EAAA,CAAAyB,YAAA,EAAoB;QACpBzB,EAAA,CAAAmB,cAAA,WAAM;QAAAnB,EAAA,CAAA0B,MAAA,uBAAgB;QAE1B1B,EAF0B,CAAAyB,YAAA,EAAO,EACtB,EACgB;;;QAtBvBzB,EAAA,CAAA2B,UAAA,uBAAAT,GAAA,CAAAzB,SAAA,CAAAmC,KAAA,CAAsC;QAEhC5B,EAAA,CAAA6B,SAAA,EAAuB;QAAvB7B,EAAA,CAAA2B,UAAA,cAAAT,GAAA,CAAAzB,SAAA,CAAuB;;;mBDS7BT,2BAA2B,EAC3BG,mBAAmB,EAAA2C,EAAA,CAAAC,aAAA,EAAAD,EAAA,CAAAE,eAAA,EAAAF,EAAA,CAAAG,oBAAA,EAAAH,EAAA,CAAAI,kBAAA,EAAAJ,EAAA,CAAAK,eAAA;IAAAC,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}